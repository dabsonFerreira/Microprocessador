
AVRASM ver. 2.1.30  C:\Users\ferre\Desktop\projetoFinal\Parte 5 def\Debug\List\Parte 5.asm Wed Aug 25 19:06:01 2021

C:\Users\ferre\Desktop\projetoFinal\Parte 5 def\Debug\List\Parte 5.asm(1414): warning: Register r4 already defined by the .DEF directive
C:\Users\ferre\Desktop\projetoFinal\Parte 5 def\Debug\List\Parte 5.asm(1415): warning: Register r5 already defined by the .DEF directive
C:\Users\ferre\Desktop\projetoFinal\Parte 5 def\Debug\List\Parte 5.asm(1416): warning: Register r7 already defined by the .DEF directive
C:\Users\ferre\Desktop\projetoFinal\Parte 5 def\Debug\List\Parte 5.asm(1417): warning: Register r6 already defined by the .DEF directive
C:\Users\ferre\Desktop\projetoFinal\Parte 5 def\Debug\List\Parte 5.asm(1418): warning: Register r9 already defined by the .DEF directive
                 
                 
                 ;CodeVisionAVR C Compiler V3.45 Evaluation
                 ;(C) Copyright 1998-2021 Pavel Haiduc, HP InfoTech S.R.L.
                 ;http://www.hpinfotech.ro
                 
                 ;Build configuration    : Debug
                 ;Chip type              : ATmega32
                 ;Program type           : Application
                 ;Clock frequency        : 8.000000 MHz
                 ;Memory model           : Small
                 ;Optimize for           : Size
                 ;(s)printf features     : int, width
                 ;(s)scanf features      : int, width
                 ;External RAM size      : 0
                 ;Data Stack size        : 512 byte(s)
                 ;Heap size              : 0 byte(s)
                 ;Promote 'char' to 'int': Yes
                 ;'char' is unsigned     : Yes
                 ;8 bit enums            : Yes
                 ;Global 'const' stored in FLASH: No
                 ;Enhanced function parameter passing: Mode 2
                 ;Enhanced core instructions: On
                 ;Automatic register allocation for global variables: On
                 ;Smart register allocation: On
                 
                 	#define _MODEL_SMALL_
                 
                 	#pragma AVRPART ADMIN PART_NAME ATmega32
                 	#pragma AVRPART MEMORY PROG_FLASH 32768
                 	#pragma AVRPART MEMORY EEPROM 1024
                 	#pragma AVRPART MEMORY INT_SRAM SIZE 2048
                 	#pragma AVRPART MEMORY INT_SRAM START_ADDR 0x60
                 
                 	#define CALL_SUPPORTED 1
                 
                 	.LISTMAC
                 	.EQU UDRE=0x5
                 	.EQU RXC=0x7
                 	.EQU USR=0xB
                 	.EQU UDR=0xC
                 	.EQU SPSR=0xE
                 	.EQU SPDR=0xF
                 	.EQU EERE=0x0
                 	.EQU EEWE=0x1
                 	.EQU EEMWE=0x2
                 	.EQU EECR=0x1C
                 	.EQU EEDR=0x1D
                 	.EQU EEARL=0x1E
                 	.EQU EEARH=0x1F
                 	.EQU WDTCR=0x21
                 	.EQU MCUCR=0x35
                 	.EQU GICR=0x3B
                 	.EQU SPL=0x3D
                 	.EQU SPH=0x3E
                 	.EQU SREG=0x3F
                 
                 	.DEF R0X0=R0
                 	.DEF R0X1=R1
                 	.DEF R0X2=R2
                 	.DEF R0X3=R3
                 	.DEF R0X4=R4
                 	.DEF R0X5=R5
                 	.DEF R0X6=R6
                 	.DEF R0X7=R7
                 	.DEF R0X8=R8
                 	.DEF R0X9=R9
                 	.DEF R0XA=R10
                 	.DEF R0XB=R11
                 	.DEF R0XC=R12
                 	.DEF R0XD=R13
                 	.DEF R0XE=R14
                 	.DEF R0XF=R15
                 	.DEF R0X10=R16
                 	.DEF R0X11=R17
                 	.DEF R0X12=R18
                 	.DEF R0X13=R19
                 	.DEF R0X14=R20
                 	.DEF R0X15=R21
                 	.DEF R0X16=R22
                 	.DEF R0X17=R23
                 	.DEF R0X18=R24
                 	.DEF R0X19=R25
                 	.DEF R0X1A=R26
                 	.DEF R0X1B=R27
                 	.DEF R0X1C=R28
                 	.DEF R0X1D=R29
                 	.DEF R0X1E=R30
                 	.DEF R0X1F=R31
                 
                 	.EQU __SRAM_START=0x0060
                 	.EQU __SRAM_END=0x085F
                 	.EQU __DSTACK_SIZE=0x0200
                 	.EQU __HEAP_SIZE=0x0000
                 	.EQU __CLEAR_SRAM_SIZE=__SRAM_END-__SRAM_START+1
                 
                 	.MACRO __CPD1N
                 	CPI  R30,LOW(@0)
                 	LDI  R26,HIGH(@0)
                 	CPC  R31,R26
                 	LDI  R26,BYTE3(@0)
                 	CPC  R22,R26
                 	LDI  R26,BYTE4(@0)
                 	CPC  R23,R26
                 	.ENDM
                 
                 	.MACRO __CPD2N
                 	CPI  R26,LOW(@0)
                 	LDI  R30,HIGH(@0)
                 	CPC  R27,R30
                 	LDI  R30,BYTE3(@0)
                 	CPC  R24,R30
                 	LDI  R30,BYTE4(@0)
                 	CPC  R25,R30
                 	.ENDM
                 
                 	.MACRO __CPWRR
                 	CP   R@0,R@2
                 	CPC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __CPWRN
                 	CPI  R@0,LOW(@2)
                 	LDI  R30,HIGH(@2)
                 	CPC  R@1,R30
                 	.ENDM
                 
                 	.MACRO __ADDB1MN
                 	SUBI R30,LOW(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDB2MN
                 	SUBI R26,LOW(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW1MN
                 	SUBI R30,LOW(-@0-(@1))
                 	SBCI R31,HIGH(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW2MN
                 	SUBI R26,LOW(-@0-(@1))
                 	SBCI R27,HIGH(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW1FN
                 	SUBI R30,LOW(-2*@0-(@1))
                 	SBCI R31,HIGH(-2*@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDD1FN
                 	SUBI R30,LOW(-2*@0-(@1))
                 	SBCI R31,HIGH(-2*@0-(@1))
                 	SBCI R22,BYTE3(-2*@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDD1N
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	SBCI R22,BYTE3(-@0)
                 	SBCI R23,BYTE4(-@0)
                 	.ENDM
                 
                 	.MACRO __ADDD2N
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	SBCI R24,BYTE3(-@0)
                 	SBCI R25,BYTE4(-@0)
                 	.ENDM
                 
                 	.MACRO __SUBD1N
                 	SUBI R30,LOW(@0)
                 	SBCI R31,HIGH(@0)
                 	SBCI R22,BYTE3(@0)
                 	SBCI R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __SUBD2N
                 	SUBI R26,LOW(@0)
                 	SBCI R27,HIGH(@0)
                 	SBCI R24,BYTE3(@0)
                 	SBCI R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ANDBMNN
                 	LDS  R30,@0+(@1)
                 	ANDI R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __ANDWMNN
                 	LDS  R30,@0+(@1)
                 	ANDI R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	LDS  R30,@0+(@1)+1
                 	ANDI R30,HIGH(@2)
                 	STS  @0+(@1)+1,R30
                 	.ENDM
                 
                 	.MACRO __ANDD1N
                 	ANDI R30,LOW(@0)
                 	ANDI R31,HIGH(@0)
                 	ANDI R22,BYTE3(@0)
                 	ANDI R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ANDD2N
                 	ANDI R26,LOW(@0)
                 	ANDI R27,HIGH(@0)
                 	ANDI R24,BYTE3(@0)
                 	ANDI R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ORBMNN
                 	LDS  R30,@0+(@1)
                 	ORI  R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __ORWMNN
                 	LDS  R30,@0+(@1)
                 	ORI  R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	LDS  R30,@0+(@1)+1
                 	ORI  R30,HIGH(@2)
                 	STS  @0+(@1)+1,R30
                 	.ENDM
                 
                 	.MACRO __ORD1N
                 	ORI  R30,LOW(@0)
                 	ORI  R31,HIGH(@0)
                 	ORI  R22,BYTE3(@0)
                 	ORI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ORD2N
                 	ORI  R26,LOW(@0)
                 	ORI  R27,HIGH(@0)
                 	ORI  R24,BYTE3(@0)
                 	ORI  R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __DELAY_USB
                 	LDI  R24,LOW(@0)
                 __DELAY_USB_LOOP:
                 	DEC  R24
                 	BRNE __DELAY_USB_LOOP
                 	.ENDM
                 
                 	.MACRO __DELAY_USW
                 	LDI  R24,LOW(@0)
                 	LDI  R25,HIGH(@0)
                 __DELAY_USW_LOOP:
                 	SBIW R24,1
                 	BRNE __DELAY_USW_LOOP
                 	.ENDM
                 
                 	.MACRO __GETW1P
                 	LD   R30,X+
                 	LD   R31,X
                 	SBIW R26,1
                 	.ENDM
                 
                 	.MACRO __GETD1S
                 	LDD  R30,Y+@0
                 	LDD  R31,Y+@0+1
                 	LDD  R22,Y+@0+2
                 	LDD  R23,Y+@0+3
                 	.ENDM
                 
                 	.MACRO __GETD2S
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	LDD  R24,Y+@0+2
                 	LDD  R25,Y+@0+3
                 	.ENDM
                 
                 	.MACRO __GETD1P_INC
                 	LD   R30,X+
                 	LD   R31,X+
                 	LD   R22,X+
                 	LD   R23,X+
                 	.ENDM
                 
                 	.MACRO __GETD1P_DEC
                 	LD   R23,-X
                 	LD   R22,-X
                 	LD   R31,-X
                 	LD   R30,-X
                 	.ENDM
                 
                 	.MACRO __PUTDP1
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __PUTDP1_DEC
                 	ST   -X,R23
                 	ST   -X,R22
                 	ST   -X,R31
                 	ST   -X,R30
                 	.ENDM
                 
                 	.MACRO __PUTD1S
                 	STD  Y+@0,R30
                 	STD  Y+@0+1,R31
                 	STD  Y+@0+2,R22
                 	STD  Y+@0+3,R23
                 	.ENDM
                 
                 	.MACRO __PUTD2S
                 	STD  Y+@0,R26
                 	STD  Y+@0+1,R27
                 	STD  Y+@0+2,R24
                 	STD  Y+@0+3,R25
                 	.ENDM
                 
                 	.MACRO __PUTDZ2
                 	STD  Z+@0,R26
                 	STD  Z+@0+1,R27
                 	STD  Z+@0+2,R24
                 	STD  Z+@0+3,R25
                 	.ENDM
                 
                 	.MACRO __CLRD1S
                 	STD  Y+@0,R30
                 	STD  Y+@0+1,R30
                 	STD  Y+@0+2,R30
                 	STD  Y+@0+3,R30
                 	.ENDM
                 
                 	.MACRO __CPD10
                 	SBIW R30,0
                 	SBCI R22,0
                 	SBCI R23,0
                 	.ENDM
                 
                 	.MACRO __CPD20
                 	SBIW R26,0
                 	SBCI R24,0
                 	SBCI R25,0
                 	.ENDM
                 
                 	.MACRO __ADDD12
                 	ADD  R30,R26
                 	ADC  R31,R27
                 	ADC  R22,R24
                 	ADC  R23,R25
                 	.ENDM
                 
                 	.MACRO __ADDD21
                 	ADD  R26,R30
                 	ADC  R27,R31
                 	ADC  R24,R22
                 	ADC  R25,R23
                 	.ENDM
                 
                 	.MACRO __SUBD12
                 	SUB  R30,R26
                 	SBC  R31,R27
                 	SBC  R22,R24
                 	SBC  R23,R25
                 	.ENDM
                 
                 	.MACRO __SUBD21
                 	SUB  R26,R30
                 	SBC  R27,R31
                 	SBC  R24,R22
                 	SBC  R25,R23
                 	.ENDM
                 
                 	.MACRO __ANDD12
                 	AND  R30,R26
                 	AND  R31,R27
                 	AND  R22,R24
                 	AND  R23,R25
                 	.ENDM
                 
                 	.MACRO __ORD12
                 	OR   R30,R26
                 	OR   R31,R27
                 	OR   R22,R24
                 	OR   R23,R25
                 	.ENDM
                 
                 	.MACRO __XORD12
                 	EOR  R30,R26
                 	EOR  R31,R27
                 	EOR  R22,R24
                 	EOR  R23,R25
                 	.ENDM
                 
                 	.MACRO __XORD21
                 	EOR  R26,R30
                 	EOR  R27,R31
                 	EOR  R24,R22
                 	EOR  R25,R23
                 	.ENDM
                 
                 	.MACRO __COMD1
                 	COM  R30
                 	COM  R31
                 	COM  R22
                 	COM  R23
                 	.ENDM
                 
                 	.MACRO __MULD2_2
                 	LSL  R26
                 	ROL  R27
                 	ROL  R24
                 	ROL  R25
                 	.ENDM
                 
                 	.MACRO __LSRD1
                 	LSR  R23
                 	ROR  R22
                 	ROR  R31
                 	ROR  R30
                 	.ENDM
                 
                 	.MACRO __LSLD1
                 	LSL  R30
                 	ROL  R31
                 	ROL  R22
                 	ROL  R23
                 	.ENDM
                 
                 	.MACRO __ASRB4
                 	ASR  R30
                 	ASR  R30
                 	ASR  R30
                 	ASR  R30
                 	.ENDM
                 
                 	.MACRO __ASRW8
                 	MOV  R30,R31
                 	CLR  R31
                 	SBRC R30,7
                 	SER  R31
                 	.ENDM
                 
                 	.MACRO __LSRD16
                 	MOV  R30,R22
                 	MOV  R31,R23
                 	LDI  R22,0
                 	LDI  R23,0
                 	.ENDM
                 
                 	.MACRO __LSLD16
                 	MOV  R22,R30
                 	MOV  R23,R31
                 	LDI  R30,0
                 	LDI  R31,0
                 	.ENDM
                 
                 	.MACRO __CWD1
                 	MOV  R22,R31
                 	ADD  R22,R22
                 	SBC  R22,R22
                 	MOV  R23,R22
                 	.ENDM
                 
                 	.MACRO __CWD2
                 	MOV  R24,R27
                 	ADD  R24,R24
                 	SBC  R24,R24
                 	MOV  R25,R24
                 	.ENDM
                 
                 	.MACRO __SETMSD1
                 	SER  R31
                 	SER  R22
                 	SER  R23
                 	.ENDM
                 
                 	.MACRO __ADDW1R15
                 	CLR  R0
                 	ADD  R30,R15
                 	ADC  R31,R0
                 	.ENDM
                 
                 	.MACRO __ADDW2R15
                 	CLR  R0
                 	ADD  R26,R15
                 	ADC  R27,R0
                 	.ENDM
                 
                 	.MACRO __EQB12
                 	CP   R30,R26
                 	LDI  R30,1
                 	BREQ PC+2
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __NEB12
                 	CP   R30,R26
                 	LDI  R30,1
                 	BRNE PC+2
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __LEB12
                 	CP   R30,R26
                 	LDI  R30,1
                 	BRGE PC+2
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __GEB12
                 	CP   R26,R30
                 	LDI  R30,1
                 	BRGE PC+2
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __LTB12
                 	CP   R26,R30
                 	LDI  R30,1
                 	BRLT PC+2
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __GTB12
                 	CP   R30,R26
                 	LDI  R30,1
                 	BRLT PC+2
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __LEB12U
                 	CP   R30,R26
                 	LDI  R30,1
                 	BRSH PC+2
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __GEB12U
                 	CP   R26,R30
                 	LDI  R30,1
                 	BRSH PC+2
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __LTB12U
                 	CP   R26,R30
                 	LDI  R30,1
                 	BRLO PC+2
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __GTB12U
                 	CP   R30,R26
                 	LDI  R30,1
                 	BRLO PC+2
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __CPW01
                 	CLR  R0
                 	CP   R0,R30
                 	CPC  R0,R31
                 	.ENDM
                 
                 	.MACRO __CPW02
                 	CLR  R0
                 	CP   R0,R26
                 	CPC  R0,R27
                 	.ENDM
                 
                 	.MACRO __CPD12
                 	CP   R30,R26
                 	CPC  R31,R27
                 	CPC  R22,R24
                 	CPC  R23,R25
                 	.ENDM
                 
                 	.MACRO __CPD21
                 	CP   R26,R30
                 	CPC  R27,R31
                 	CPC  R24,R22
                 	CPC  R25,R23
                 	.ENDM
                 
                 	.MACRO __BSTB1
                 	CLT
                 	TST  R30
                 	BREQ PC+2
                 	SET
                 	.ENDM
                 
                 	.MACRO __LNEGB1
                 	TST  R30
                 	LDI  R30,1
                 	BREQ PC+2
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __LNEGW1
                 	OR   R30,R31
                 	LDI  R30,1
                 	BREQ PC+2
                 	LDI  R30,0
                 	.ENDM
                 
                 	.MACRO __POINTB1MN
                 	LDI  R30,LOW(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW1MN
                 	LDI  R30,LOW(@0+(@1))
                 	LDI  R31,HIGH(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD1M
                 	LDI  R30,LOW(@0)
                 	LDI  R31,HIGH(@0)
                 	LDI  R22,BYTE3(@0)
                 	LDI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __POINTW1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	LDI  R22,BYTE3(2*@0+(@1))
                 	LDI  R23,BYTE4(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTB2MN
                 	LDI  R26,LOW(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW2MN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD2M
                 	LDI  R26,LOW(@0)
                 	LDI  R27,HIGH(@0)
                 	LDI  R24,BYTE3(@0)
                 	LDI  R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __POINTW2FN
                 	LDI  R26,LOW(2*@0+(@1))
                 	LDI  R27,HIGH(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD2FN
                 	LDI  R26,LOW(2*@0+(@1))
                 	LDI  R27,HIGH(2*@0+(@1))
                 	LDI  R24,BYTE3(2*@0+(@1))
                 	LDI  R25,BYTE4(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTBRM
                 	LDI  R@0,LOW(@1)
                 	.ENDM
                 
                 	.MACRO __POINTWRM
                 	LDI  R@0,LOW(@2)
                 	LDI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __POINTBRMN
                 	LDI  R@0,LOW(@1+(@2))
                 	.ENDM
                 
                 	.MACRO __POINTWRMN
                 	LDI  R@0,LOW(@2+(@3))
                 	LDI  R@1,HIGH(@2+(@3))
                 	.ENDM
                 
                 	.MACRO __POINTWRFN
                 	LDI  R@0,LOW(@2*2+(@3))
                 	LDI  R@1,HIGH(@2*2+(@3))
                 	.ENDM
                 
                 	.MACRO __GETD1N
                 	LDI  R30,LOW(@0)
                 	LDI  R31,HIGH(@0)
                 	LDI  R22,BYTE3(@0)
                 	LDI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __GETD2N
                 	LDI  R26,LOW(@0)
                 	LDI  R27,HIGH(@0)
                 	LDI  R24,BYTE3(@0)
                 	LDI  R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __GETB1MN
                 	LDS  R30,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETB1HMN
                 	LDS  R31,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETW1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	.ENDM
                 
                 	.MACRO __GETD1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	LDS  R22,@0+(@1)+2
                 	LDS  R23,@0+(@1)+3
                 	.ENDM
                 
                 	.MACRO __GETBRMN
                 	LDS  R@0,@1+(@2)
                 	.ENDM
                 
                 	.MACRO __GETWRMN
                 	LDS  R@0,@2+(@3)
                 	LDS  R@1,@2+(@3)+1
                 	.ENDM
                 
                 	.MACRO __GETWRZ
                 	LDD  R@0,Z+@2
                 	LDD  R@1,Z+@2+1
                 	.ENDM
                 
                 	.MACRO __GETD2Z
                 	LDD  R26,Z+@0
                 	LDD  R27,Z+@0+1
                 	LDD  R24,Z+@0+2
                 	LDD  R25,Z+@0+3
                 	.ENDM
                 
                 	.MACRO __GETB2MN
                 	LDS  R26,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETW2MN
                 	LDS  R26,@0+(@1)
                 	LDS  R27,@0+(@1)+1
                 	.ENDM
                 
                 	.MACRO __GETD2MN
                 	LDS  R26,@0+(@1)
                 	LDS  R27,@0+(@1)+1
                 	LDS  R24,@0+(@1)+2
                 	LDS  R25,@0+(@1)+3
                 	.ENDM
                 
                 	.MACRO __PUTB1MN
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __PUTW1MN
                 	STS  @0+(@1),R30
                 	STS  @0+(@1)+1,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1MN
                 	STS  @0+(@1),R30
                 	STS  @0+(@1)+1,R31
                 	STS  @0+(@1)+2,R22
                 	STS  @0+(@1)+3,R23
                 	.ENDM
                 
                 	.MACRO __PUTB1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRB
                 	.ENDM
                 
                 	.MACRO __PUTW1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRW
                 	.ENDM
                 
                 	.MACRO __PUTD1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRD
                 	.ENDM
                 
                 	.MACRO __PUTBR0MN
                 	STS  @0+(@1),R0
                 	.ENDM
                 
                 	.MACRO __PUTBMRN
                 	STS  @0+(@1),R@2
                 	.ENDM
                 
                 	.MACRO __PUTWMRN
                 	STS  @0+(@1),R@2
                 	STS  @0+(@1)+1,R@3
                 	.ENDM
                 
                 	.MACRO __PUTBZR
                 	STD  Z+@1,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWZR
                 	STD  Z+@2,R@0
                 	STD  Z+@2+1,R@1
                 	.ENDM
                 
                 	.MACRO __GETW1R
                 	MOV  R30,R@0
                 	MOV  R31,R@1
                 	.ENDM
                 
                 	.MACRO __GETW2R
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	.ENDM
                 
                 	.MACRO __GETWRN
                 	LDI  R@0,LOW(@2)
                 	LDI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __PUTW1R
                 	MOV  R@0,R30
                 	MOV  R@1,R31
                 	.ENDM
                 
                 	.MACRO __PUTW2R
                 	MOV  R@0,R26
                 	MOV  R@1,R27
                 	.ENDM
                 
                 	.MACRO __ADDWRN
                 	SUBI R@0,LOW(-@2)
                 	SBCI R@1,HIGH(-@2)
                 	.ENDM
                 
                 	.MACRO __ADDWRR
                 	ADD  R@0,R@2
                 	ADC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __SUBWRN
                 	SUBI R@0,LOW(@2)
                 	SBCI R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __SUBWRR
                 	SUB  R@0,R@2
                 	SBC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __ANDWRN
                 	ANDI R@0,LOW(@2)
                 	ANDI R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __ANDWRR
                 	AND  R@0,R@2
                 	AND  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __ORWRN
                 	ORI  R@0,LOW(@2)
                 	ORI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __ORWRR
                 	OR   R@0,R@2
                 	OR   R@1,R@3
                 	.ENDM
                 
                 	.MACRO __EORWRR
                 	EOR  R@0,R@2
                 	EOR  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __GETWRS
                 	LDD  R@0,Y+@2
                 	LDD  R@1,Y+@2+1
                 	.ENDM
                 
                 	.MACRO __PUTBSR
                 	STD  Y+@1,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWSR
                 	STD  Y+@2,R@0
                 	STD  Y+@2+1,R@1
                 	.ENDM
                 
                 	.MACRO __MOVEWRR
                 	MOV  R@0,R@2
                 	MOV  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __INWR
                 	IN   R@0,@2
                 	IN   R@1,@2+1
                 	.ENDM
                 
                 	.MACRO __OUTWR
                 	OUT  @2+1,R@1
                 	OUT  @2,R@0
                 	.ENDM
                 
                 	.MACRO __CALL1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	CALL __GETW1PF
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL2EN
                 	PUSH R26
                 	PUSH R27
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMRDW
                 	POP  R27
                 	POP  R26
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL2EX
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	CALL __EEPROMRDD
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __GETW1STACK
                 	IN   R30,SPL
                 	IN   R31,SPH
                 	ADIW R30,@0+1
                 	LD   R0,Z+
                 	LD   R31,Z
                 	MOV  R30,R0
                 	.ENDM
                 
                 	.MACRO __GETD1STACK
                 	IN   R30,SPL
                 	IN   R31,SPH
                 	ADIW R30,@0+1
                 	LD   R0,Z+
                 	LD   R1,Z+
                 	LD   R22,Z
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __NBST
                 	BST  R@0,@1
                 	IN   R30,SREG
                 	LDI  R31,0x40
                 	EOR  R30,R31
                 	OUT  SREG,R30
                 	.ENDM
                 
                 
                 	.MACRO __PUTB1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __PUTB1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __PUTB1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __PUTB1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __PUTB1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __PUTB1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __PUTB1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __PUTB1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 
                 	.MACRO __GETB1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R30,Z
                 	.ENDM
                 
                 	.MACRO __GETB1HSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R31,Z
                 	.ENDM
                 
                 	.MACRO __GETW1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	CALL __GETW1Z
                 	.ENDM
                 
                 	.MACRO __GETD1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	CALL __GETD1Z
                 	.ENDM
                 
                 	.MACRO __GETB2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R26,X
                 	.ENDM
                 
                 	.MACRO __GETW2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	CALL __GETW2X
                 	.ENDM
                 
                 	.MACRO __GETD2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	CALL __GETD2X
                 	.ENDM
                 
                 	.MACRO __GETBRSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@1)
                 	SBCI R31,HIGH(-@1)
                 	LD   R@0,Z
                 	.ENDM
                 
                 	.MACRO __GETWRSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@2)
                 	SBCI R31,HIGH(-@2)
                 	LD   R@0,Z+
                 	LD   R@1,Z
                 	.ENDM
                 
                 	.MACRO __GETBRSX2
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	LD   R@0,X
                 	.ENDM
                 
                 	.MACRO __GETWRSX2
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	LD   R@0,X+
                 	LD   R@1,X
                 	.ENDM
                 
                 	.MACRO __LSLW8SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R31,Z
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __PUTB1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __CLRW1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __CLRD1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X+,R30
                 	ST   X+,R30
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTB2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z,R26
                 	.ENDM
                 
                 	.MACRO __PUTW2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z+,R26
                 	ST   Z,R27
                 	.ENDM
                 
                 	.MACRO __PUTD2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z+,R26
                 	ST   Z+,R27
                 	ST   Z+,R24
                 	ST   Z,R25
                 	.ENDM
                 
                 	.MACRO __PUTBSRX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@1)
                 	SBCI R31,HIGH(-@1)
                 	ST   Z,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWSRX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@2)
                 	SBCI R31,HIGH(-@2)
                 	ST   Z+,R@0
                 	ST   Z,R@1
                 	.ENDM
                 
                 	.MACRO __PUTB1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __MULBRR
                 	MULS R@0,R@1
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __MULBRRU
                 	MUL  R@0,R@1
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __MULBRR0
                 	MULS R@0,R@1
                 	.ENDM
                 
                 	.MACRO __MULBRRU0
                 	MUL  R@0,R@1
                 	.ENDM
                 
                 	.MACRO __MULBNWRU
                 	LDI  R26,@2
                 	MUL  R26,R@0
                 	MOVW R30,R0
                 	MUL  R26,R@1
                 	ADD  R31,R0
                 	.ENDM
                 
                 ;NAME DEFINITIONS FOR GLOBAL VARIABLES ALLOCATED TO REGISTERS
                 	.DEF _isFarol=R4
                 	.DEF _isFarol_msb=R5
                 	.DEF __lcd_x=R7
                 	.DEF __lcd_y=R6
                 	.DEF __lcd_maxx=R9
                 
                 	.CSEG
                 	.ORG 0x00
                 
                 ;START OF CODE MARKER
                 __START_OF_CODE:
                 
                 ;INTERRUPT VECTORS
000000 940c 003d 	JMP  __RESET
000002 940c 0000 	JMP  0x00
000004 940c 0000 	JMP  0x00
000006 940c 006a 	JMP  _ext_int2_isr
000008 940c 0000 	JMP  0x00
00000a 940c 0000 	JMP  0x00
00000c 940c 0000 	JMP  0x00
00000e 940c 0000 	JMP  0x00
000010 940c 0000 	JMP  0x00
000012 940c 0000 	JMP  0x00
000014 940c 0000 	JMP  0x00
000016 940c 0000 	JMP  0x00
000018 940c 0000 	JMP  0x00
00001a 940c 0000 	JMP  0x00
00001c 940c 0000 	JMP  0x00
00001e 940c 0000 	JMP  0x00
000020 940c 0000 	JMP  0x00
000022 940c 0000 	JMP  0x00
000024 940c 0000 	JMP  0x00
000026 940c 0000 	JMP  0x00
000028 940c 0000 	JMP  0x00
                 
                 _tbl10_G100:
00002a 2710
00002b 03e8
00002c 0064
00002d 000a      	.DB  0x10,0x27,0xE8,0x3,0x64,0x0,0xA,0x0
00002e 0001      	.DB  0x1,0x0
                 _tbl16_G100:
00002f 1000
000030 0100
000031 0010
000032 0001      	.DB  0x0,0x10,0x0,0x1,0x10,0x0,0x1,0x0
                 
                 ;GLOBAL REGISTER VARIABLES INITIALIZATION
                 __REG_VARS:
000033 0000      	.DB  0x0,0x0
                 
                 _0x0:
000034 0046      	.DB  0x46,0x0
                 _0x2020003:
000035 c080      	.DB  0x80,0xC0
                 
                 __GLOBAL_INI_TBL:
000036 0002      	.DW  0x02
000037 0004      	.DW  0x04
000038 0066      	.DW  __REG_VARS*2
                 
000039 0002      	.DW  0x02
00003a 0281      	.DW  __base_y_G101
00003b 006a      	.DW  _0x2020003*2
                 
                 _0xFFFFFFFF:
00003c 0000      	.DW  0
                 
                 #define __GLOBAL_INI_TBL_PRESENT 1
                 
                 __RESET:
00003d 94f8      	CLI
00003e 27ee      	CLR  R30
00003f bbec      	OUT  EECR,R30
                 
                 ;INTERRUPT VECTORS ARE PLACED
                 ;AT THE START OF FLASH
000040 e0f1      	LDI  R31,1
000041 bffb      	OUT  GICR,R31
000042 bfeb      	OUT  GICR,R30
000043 bfe5      	OUT  MCUCR,R30
                 
                 ;CLEAR R2-R14
000044 e08d      	LDI  R24,(14-2)+1
000045 e0a2      	LDI  R26,2
000046 27bb      	CLR  R27
                 __CLEAR_REG:
000047 93ed      	ST   X+,R30
000048 958a      	DEC  R24
000049 f7e9      	BRNE __CLEAR_REG
                 
                 ;CLEAR SRAM
00004a e080      	LDI  R24,LOW(__CLEAR_SRAM_SIZE)
00004b e098      	LDI  R25,HIGH(__CLEAR_SRAM_SIZE)
00004c e6a0      	LDI  R26,__SRAM_START
                 __CLEAR_SRAM:
00004d 93ed      	ST   X+,R30
00004e 9701      	SBIW R24,1
00004f f7e9      	BRNE __CLEAR_SRAM
                 
                 ;GLOBAL VARIABLES INITIALIZATION
000050 e6ec      	LDI  R30,LOW(__GLOBAL_INI_TBL*2)
000051 e0f0      	LDI  R31,HIGH(__GLOBAL_INI_TBL*2)
                 __GLOBAL_INI_NEXT:
000052 9185      	LPM  R24,Z+
000053 9195      	LPM  R25,Z+
000054 9700      	SBIW R24,0
000055 f061      	BREQ __GLOBAL_INI_END
000056 91a5      	LPM  R26,Z+
000057 91b5      	LPM  R27,Z+
000058 9005      	LPM  R0,Z+
000059 9015      	LPM  R1,Z+
00005a 01bf      	MOVW R22,R30
00005b 01f0      	MOVW R30,R0
                 __GLOBAL_INI_LOOP:
00005c 9005      	LPM  R0,Z+
00005d 920d      	ST   X+,R0
00005e 9701      	SBIW R24,1
00005f f7e1      	BRNE __GLOBAL_INI_LOOP
000060 01fb      	MOVW R30,R22
000061 cff0      	RJMP __GLOBAL_INI_NEXT
                 __GLOBAL_INI_END:
                 
                 ;HARDWARE STACK POINTER INITIALIZATION
000062 e5ef      	LDI  R30,LOW(__SRAM_END-__HEAP_SIZE)
000063 bfed      	OUT  SPL,R30
000064 e0e8      	LDI  R30,HIGH(__SRAM_END-__HEAP_SIZE)
000065 bfee      	OUT  SPH,R30
                 
                 ;DATA STACK POINTER INITIALIZATION
000066 e6c0      	LDI  R28,LOW(__SRAM_START+__DSTACK_SIZE)
000067 e0d2      	LDI  R29,HIGH(__SRAM_START+__DSTACK_SIZE)
                 
000068 940c 007e 	JMP  _main
                 
                 	.ESEG
                 	.ORG 0x00
                 
                 	.DSEG
                 	.ORG 0x260
                 
                 	.CSEG
                 	#ifndef __SLEEP_DEFINED__
                 	#define __SLEEP_DEFINED__
                 	.EQU __se_bit=0x80
                 	.EQU __sm_mask=0x70
                 	.EQU __sm_powerdown=0x20
                 	.EQU __sm_powersave=0x30
                 	.EQU __sm_standby=0x60
                 	.EQU __sm_ext_standby=0x70
                 	.EQU __sm_adc_noise_red=0x10
                 	.SET power_ctrl_reg=mcucr
                 	#endif
                 ;interrupt [4] void ext_int2_isr(void)
                 ; 0000 000B {
                 
                 	.CSEG
                 _ext_int2_isr:
                 ; .FSTART _ext_int2_isr
00006a 920a      	ST   -Y,R0
00006b 93ea      	ST   -Y,R30
00006c 93fa      	ST   -Y,R31
00006d b7ef      	IN   R30,SREG
00006e 93ea      	ST   -Y,R30
                 ; 0000 000C // Place your code here
                 ; 0000 000D if (isFarol){
00006f 2c04      	MOV  R0,R4
000070 2805      	OR   R0,R5
000071 f019      	BREQ _0x3
                 ; 0000 000E isFarol = 0;}
000072 2444      	CLR  R4
000073 2455      	CLR  R5
                 ; 0000 000F else{
000074 c003      	RJMP _0x4
                 _0x3:
                 ; 0000 0010 isFarol = 1;
000075 e0e1      	LDI  R30,LOW(1)
000076 e0f0      	LDI  R31,HIGH(1)
000077 012f      	MOVW R4,R30
                 ; 0000 0011 }
                 _0x4:
                 ; 0000 0012 //printf("%d",isFarol);
                 ; 0000 0013 }
000078 91e9      	LD   R30,Y+
000079 bfef      	OUT  SREG,R30
00007a 91f9      	LD   R31,Y+
00007b 91e9      	LD   R30,Y+
00007c 9009      	LD   R0,Y+
00007d 9518      	RETI
                 ; .FEND
                 ;void main(void)
                 ; 0000 0018 {
                 _main:
                 ; .FSTART _main
                 ; 0000 0019 // Declare your local variables here
                 ; 0000 001A 
                 ; 0000 001B // Input/Output Ports initialization
                 ; 0000 001C // Port A initialization
                 ; 0000 001D // Function: Bit7=In Bit6=In Bit5=In Bit4=In Bit3=In Bit2=In Bit1=In Bit0=In
                 ; 0000 001E DDRA=(0<<DDA7) | (0<<DDA6) | (0<<DDA5) | (0<<DDA4) | (0<<DDA3) | (0<<DDA2) | (0<<DDA1) | (0<<DDA0);
00007e e0e0      	LDI  R30,LOW(0)
00007f bbea      	OUT  0x1A,R30
                 ; 0000 001F // State: Bit7=T Bit6=T Bit5=T Bit4=T Bit3=T Bit2=T Bit1=T Bit0=T
                 ; 0000 0020 PORTA=(0<<PORTA7) | (0<<PORTA6) | (0<<PORTA5) | (0<<PORTA4) | (0<<PORTA3) | (0<<PORTA2) | (0<<PORTA1) | (0<<PORTA0);
000080 bbeb      	OUT  0x1B,R30
                 ; 0000 0021 
                 ; 0000 0022 // Port B initialization
                 ; 0000 0023 // Function: Bit7=In Bit6=In Bit5=In Bit4=In Bit3=In Bit2=In Bit1=In Bit0=In
                 ; 0000 0024 DDRB=(0<<DDB7) | (0<<DDB6) | (0<<DDB5) | (0<<DDB4) | (0<<DDB3) | (0<<DDB2) | (0<<DDB1) | (0<<DDB0);
000081 bbe7      	OUT  0x17,R30
                 ; 0000 0025 // State: Bit7=T Bit6=T Bit5=T Bit4=T Bit3=T Bit2=T Bit1=T Bit0=T
                 ; 0000 0026 PORTB=(0<<PORTB7) | (0<<PORTB6) | (0<<PORTB5) | (0<<PORTB4) | (0<<PORTB3) | (0<<PORTB2) | (0<<PORTB1) | (0<<PORTB0);
000082 bbe8      	OUT  0x18,R30
                 ; 0000 0027 
                 ; 0000 0028 // Port C initialization
                 ; 0000 0029 // Function: Bit7=In Bit6=In Bit5=In Bit4=In Bit3=In Bit2=In Bit1=In Bit0=In
                 ; 0000 002A DDRC=(0<<DDC7) | (0<<DDC6) | (0<<DDC5) | (0<<DDC4) | (0<<DDC3) | (0<<DDC2) | (0<<DDC1) | (0<<DDC0);
000083 bbe4      	OUT  0x14,R30
                 ; 0000 002B // State: Bit7=T Bit6=T Bit5=T Bit4=T Bit3=T Bit2=T Bit1=T Bit0=T
                 ; 0000 002C PORTC=(0<<PORTC7) | (0<<PORTC6) | (0<<PORTC5) | (0<<PORTC4) | (0<<PORTC3) | (0<<PORTC2) | (0<<PORTC1) | (0<<PORTC0);
000084 bbe5      	OUT  0x15,R30
                 ; 0000 002D 
                 ; 0000 002E // Port D initialization
                 ; 0000 002F // Function: Bit7=In Bit6=In Bit5=In Bit4=In Bit3=In Bit2=In Bit1=In Bit0=In
                 ; 0000 0030 DDRD=(0<<DDD7) | (0<<DDD6) | (0<<DDD5) | (0<<DDD4) | (0<<DDD3) | (0<<DDD2) | (0<<DDD1) | (0<<DDD0);
000085 bbe1      	OUT  0x11,R30
                 ; 0000 0031 // State: Bit7=T Bit6=T Bit5=T Bit4=T Bit3=T Bit2=T Bit1=T Bit0=T
                 ; 0000 0032 PORTD=(0<<PORTD7) | (0<<PORTD6) | (0<<PORTD5) | (0<<PORTD4) | (0<<PORTD3) | (0<<PORTD2) | (0<<PORTD1) | (0<<PORTD0);
000086 bbe2      	OUT  0x12,R30
                 ; 0000 0033 
                 ; 0000 0034 // Timer/Counter 0 initialization
                 ; 0000 0035 // Clock source: System Clock
                 ; 0000 0036 // Clock value: Timer 0 Stopped
                 ; 0000 0037 // Mode: Normal top=0xFF
                 ; 0000 0038 // OC0 output: Disconnected
                 ; 0000 0039 TCCR0=(0<<WGM00) | (0<<COM01) | (0<<COM00) | (0<<WGM01) | (0<<CS02) | (0<<CS01) | (0<<CS00);
000087 bfe3      	OUT  0x33,R30
                 ; 0000 003A TCNT0=0x00;
000088 bfe2      	OUT  0x32,R30
                 ; 0000 003B OCR0=0x00;
000089 bfec      	OUT  0x3C,R30
                 ; 0000 003C 
                 ; 0000 003D // Timer/Counter 1 initialization
                 ; 0000 003E // Clock source: System Clock
                 ; 0000 003F // Clock value: Timer1 Stopped
                 ; 0000 0040 // Mode: Normal top=0xFFFF
                 ; 0000 0041 // OC1A output: Disconnected
                 ; 0000 0042 // OC1B output: Disconnected
                 ; 0000 0043 // Noise Canceler: Off
                 ; 0000 0044 // Input Capture on Falling Edge
                 ; 0000 0045 // Timer1 Overflow Interrupt: Off
                 ; 0000 0046 // Input Capture Interrupt: Off
                 ; 0000 0047 // Compare A Match Interrupt: Off
                 ; 0000 0048 // Compare B Match Interrupt: Off
                 ; 0000 0049 TCCR1A=(0<<COM1A1) | (0<<COM1A0) | (0<<COM1B1) | (0<<COM1B0) | (0<<WGM11) | (0<<WGM10);
00008a bdef      	OUT  0x2F,R30
                 ; 0000 004A TCCR1B=(0<<ICNC1) | (0<<ICES1) | (0<<WGM13) | (0<<WGM12) | (0<<CS12) | (0<<CS11) | (0<<CS10);
00008b bdee      	OUT  0x2E,R30
                 ; 0000 004B TCNT1H=0x00;
00008c bded      	OUT  0x2D,R30
                 ; 0000 004C TCNT1L=0x00;
00008d bdec      	OUT  0x2C,R30
                 ; 0000 004D ICR1H=0x00;
00008e bde7      	OUT  0x27,R30
                 ; 0000 004E ICR1L=0x00;
00008f bde6      	OUT  0x26,R30
                 ; 0000 004F OCR1AH=0x00;
000090 bdeb      	OUT  0x2B,R30
                 ; 0000 0050 OCR1AL=0x00;
000091 bdea      	OUT  0x2A,R30
                 ; 0000 0051 OCR1BH=0x00;
000092 bde9      	OUT  0x29,R30
                 ; 0000 0052 OCR1BL=0x00;
000093 bde8      	OUT  0x28,R30
                 ; 0000 0053 
                 ; 0000 0054 // Timer/Counter 2 initialization
                 ; 0000 0055 // Clock source: System Clock
                 ; 0000 0056 // Clock value: Timer2 Stopped
                 ; 0000 0057 // Mode: Normal top=0xFF
                 ; 0000 0058 // OC2 output: Disconnected
                 ; 0000 0059 ASSR=0<<AS2;
000094 bde2      	OUT  0x22,R30
                 ; 0000 005A TCCR2=(0<<PWM2) | (0<<COM21) | (0<<COM20) | (0<<CTC2) | (0<<CS22) | (0<<CS21) | (0<<CS20);
000095 bde5      	OUT  0x25,R30
                 ; 0000 005B TCNT2=0x00;
000096 bde4      	OUT  0x24,R30
                 ; 0000 005C OCR2=0x00;
000097 bde3      	OUT  0x23,R30
                 ; 0000 005D 
                 ; 0000 005E // Timer(s)/Counter(s) Interrupt(s) initialization
                 ; 0000 005F TIMSK=(0<<OCIE2) | (0<<TOIE2) | (0<<TICIE1) | (0<<OCIE1A) | (0<<OCIE1B) | (0<<TOIE1) | (0<<OCIE0) | (0<<TOIE0);
000098 bfe9      	OUT  0x39,R30
                 ; 0000 0060 
                 ; 0000 0061 // External Interrupt(s) initialization
                 ; 0000 0062 // INT0: Off
                 ; 0000 0063 // INT1: Off
                 ; 0000 0064 // INT2: On
                 ; 0000 0065 // INT2 Mode: Falling Edge
                 ; 0000 0066 GICR|=(0<<INT1) | (0<<INT0) | (1<<INT2);
000099 b7eb      	IN   R30,0x3B
00009a 62e0      	ORI  R30,0x20
00009b bfeb      	OUT  0x3B,R30
                 ; 0000 0067 MCUCR=(0<<ISC11) | (0<<ISC10) | (0<<ISC01) | (0<<ISC00);
00009c e0e0      	LDI  R30,LOW(0)
00009d bfe5      	OUT  0x35,R30
                 ; 0000 0068 MCUCSR=(0<<ISC2);
00009e bfe4      	OUT  0x34,R30
                 ; 0000 0069 GIFR=(0<<INTF1) | (0<<INTF0) | (1<<INTF2);
00009f e2e0      	LDI  R30,LOW(32)
0000a0 bfea      	OUT  0x3A,R30
                 ; 0000 006A 
                 ; 0000 006B // USART initialization
                 ; 0000 006C // USART disabled
                 ; 0000 006D UCSRB=(0<<RXCIE) | (0<<TXCIE) | (0<<UDRIE) | (0<<RXEN) | (0<<TXEN) | (0<<UCSZ2) | (0<<RXB8) | (0<<TXB8);
0000a1 e0e0      	LDI  R30,LOW(0)
0000a2 b9ea      	OUT  0xA,R30
                 ; 0000 006E 
                 ; 0000 006F // Analog Comparator initialization
                 ; 0000 0070 // Analog Comparator: Off
                 ; 0000 0071 // The Analog Comparator's positive input is
                 ; 0000 0072 // connected to the AIN0 pin
                 ; 0000 0073 // The Analog Comparator's negative input is
                 ; 0000 0074 // connected to the AIN1 pin
                 ; 0000 0075 ACSR=(1<<ACD) | (0<<ACBG) | (0<<ACO) | (0<<ACI) | (0<<ACIE) | (0<<ACIC) | (0<<ACIS1) | (0<<ACIS0);
0000a3 e8e0      	LDI  R30,LOW(128)
0000a4 b9e8      	OUT  0x8,R30
                 ; 0000 0076 SFIOR=(0<<ACME);
0000a5 e0e0      	LDI  R30,LOW(0)
0000a6 bfe0      	OUT  0x30,R30
                 ; 0000 0077 
                 ; 0000 0078 // ADC initialization
                 ; 0000 0079 // ADC disabled
                 ; 0000 007A ADCSRA=(0<<ADEN) | (0<<ADSC) | (0<<ADATE) | (0<<ADIF) | (0<<ADIE) | (0<<ADPS2) | (0<<ADPS1) | (0<<ADPS0);
0000a7 b9e6      	OUT  0x6,R30
                 ; 0000 007B 
                 ; 0000 007C // SPI initialization
                 ; 0000 007D // SPI disabled
                 ; 0000 007E SPCR=(0<<SPIE) | (0<<SPE) | (0<<DORD) | (0<<MSTR) | (0<<CPOL) | (0<<CPHA) | (0<<SPR1) | (0<<SPR0);
0000a8 b9ed      	OUT  0xD,R30
                 ; 0000 007F 
                 ; 0000 0080 // TWI initialization
                 ; 0000 0081 // TWI disabled
                 ; 0000 0082 TWCR=(0<<TWEA) | (0<<TWSTA) | (0<<TWSTO) | (0<<TWEN) | (0<<TWIE);
0000a9 bfe6      	OUT  0x36,R30
                 ; 0000 0083 
                 ; 0000 0084 // Alphanumeric LCD initialization
                 ; 0000 0085 // Connections are specified in the
                 ; 0000 0086 // Project|Configure|C Compiler|Libraries|Alphanumeric LCD menu:
                 ; 0000 0087 // RS: PORTC Bit 0
                 ; 0000 0088 // RD: PORTC Bit 1
                 ; 0000 0089 // EN: PORTC Bit 2
                 ; 0000 008A // D4: PORTC Bit 4
                 ; 0000 008B // D5: PORTC Bit 5
                 ; 0000 008C // D6: PORTC Bit 6
                 ; 0000 008D // D7: PORTC Bit 7
                 ; 0000 008E // Characters/line: 8
                 ; 0000 008F lcd_init(8);
0000aa e0a8      	LDI  R26,LOW(8)
0000ab d203      	RCALL _lcd_init
                 ; 0000 0090 
                 ; 0000 0091 // Globally enable interrupts
                 ; 0000 0092 #asm("sei")
0000ac 9478      	SEI
                 ; 0000 0093 
                 ; 0000 0094 while (1)
                 _0x5:
                 ; 0000 0095 {
                 ; 0000 0096 if (isFarol){
0000ad 2c04      	MOV  R0,R4
0000ae 2805      	OR   R0,R5
0000af f021      	BREQ _0x8
                 ; 0000 0097 lcd_gotoxy(0,0);
0000b0 d242      	RCALL SUBOPT_0x0
                 ; 0000 0098 sprintf(painel1,"F");
                +
0000b1 e6e8     +LDI R30 , LOW ( 2 * _0x0 + ( 0 ) )
0000b2 e0f0     +LDI R31 , HIGH ( 2 * _0x0 + ( 0 ) )
                 	__POINTW1FN _0x0,0
0000b3 c003      	RJMP _0xB
                 ; 0000 0099 lcd_clear();
                 ; 0000 009A lcd_puts(painel1);
                 ; 0000 009B }
                 ; 0000 009C else{
                 _0x8:
                 ; 0000 009D lcd_gotoxy(0,0);
0000b4 d23e      	RCALL SUBOPT_0x0
                 ; 0000 009E sprintf(painel1,"");
                +
0000b5 e6e9     +LDI R30 , LOW ( 2 * _0x0 + ( 1 ) )
0000b6 e0f0     +LDI R31 , HIGH ( 2 * _0x0 + ( 1 ) )
                 	__POINTW1FN _0x0,1
                 _0xB:
0000b7 93fa      	ST   -Y,R31
0000b8 93ea      	ST   -Y,R30
0000b9 e080      	LDI  R24,0
0000ba d15d      	RCALL _sprintf
0000bb 9624      	ADIW R28,4
                 ; 0000 009F lcd_clear();
0000bc d1c6      	RCALL _lcd_clear
                 ; 0000 00A0 lcd_puts(painel1);
0000bd e6a0      	LDI  R26,LOW(_painel1)
0000be e0b2      	LDI  R27,HIGH(_painel1)
0000bf d1e0      	RCALL _lcd_puts
                 ; 0000 00A1 }
                 ; 0000 00A2 
                 ; 0000 00A3 delay_ms(5000);
0000c0 e8a8      	LDI  R26,LOW(5000)
0000c1 e1b3      	LDI  R27,HIGH(5000)
0000c2 d282      	RCALL _delay_ms
                 ; 0000 00A4 
                 ; 0000 00A5 }
0000c3 cfe9      	RJMP _0x5
                 ; 0000 00A6 }
                 _0xA:
0000c4 cfff      	RJMP _0xA
                 ; .FEND
                 	#ifndef __SLEEP_DEFINED__
                 	#endif
                 
                 	.CSEG
                 _put_buff_G100:
                 ; .FSTART _put_buff_G100
0000c5 d269      	RCALL __SAVELOCR6
0000c6 019d      	MOVW R18,R26
0000c7 815e      	LDD  R21,Y+6
0000c8 9612      	ADIW R26,2
                +
0000c9 91ed     +LD R30 , X +
0000ca 91fc     +LD R31 , X
0000cb 9711     +SBIW R26 , 1
                 	__GETW1P
0000cc 9730      	SBIW R30,0
0000cd f0e9      	BREQ _0x2000010
0000ce 01d9      	MOVW R26,R18
0000cf d22c      	RCALL SUBOPT_0x1
0000d0 018f      	MOVW R16,R30
0000d1 9730      	SBIW R30,0
0000d2 f059      	BREQ _0x2000012
                +
0000d3 3002     +CPI R16 , LOW ( 2 )
0000d4 e0e0     +LDI R30 , HIGH ( 2 )
0000d5 071e     +CPC R17 , R30
                 	__CPWRN 16,17,2
0000d6 f060      	BRLO _0x2000013
0000d7 01f8      	MOVW R30,R16
0000d8 9731      	SBIW R30,1
0000d9 018f      	MOVW R16,R30
                +
0000da 01d9     +MOVW R26 , R18
0000db 9614     +ADIW R26 , 4
0000dc 93ed     +ST X + , R30
0000dd 93fc     +ST X , R31
                 	__PUTW1RNS 18,4
                 _0x2000012:
0000de 01d9      	MOVW R26,R18
0000df 9612      	ADIW R26,2
0000e0 d220      	RCALL SUBOPT_0x2
0000e1 9731      	SBIW R30,1
0000e2 8350      	ST   Z,R21
                 _0x2000013:
0000e3 01d9      	MOVW R26,R18
                +
0000e4 91ed     +LD R30 , X +
0000e5 91fc     +LD R31 , X
0000e6 9711     +SBIW R26 , 1
                 	__GETW1P
0000e7 23ff      	TST  R31
0000e8 f00a      	BRMI _0x2000014
0000e9 d217      	RCALL SUBOPT_0x2
                 _0x2000014:
0000ea c005      	RJMP _0x2000015
                 _0x2000010:
0000eb 01d9      	MOVW R26,R18
0000ec efef      	LDI  R30,LOW(65535)
0000ed efff      	LDI  R31,HIGH(65535)
0000ee 93ed      	ST   X+,R30
0000ef 93fc      	ST   X,R31
                 _0x2000015:
0000f0 d245      	RCALL __LOADLOCR6
0000f1 9627      	ADIW R28,7
0000f2 9508      	RET
                 ; .FEND
                 __print_G100:
                 ; .FSTART __print_G100
0000f3 93ba      	ST   -Y,R27
0000f4 93aa      	ST   -Y,R26
0000f5 9726      	SBIW R28,6
0000f6 d238      	RCALL __SAVELOCR6
0000f7 e010      	LDI  R17,0
0000f8 85ac      	LDD  R26,Y+12
0000f9 85bd      	LDD  R27,Y+12+1
0000fa e0e0      	LDI  R30,LOW(0)
0000fb e0f0      	LDI  R31,HIGH(0)
0000fc 93ed      	ST   X+,R30
0000fd 93fc      	ST   X,R31
                 _0x2000016:
0000fe 89ea      	LDD  R30,Y+18
0000ff 89fb      	LDD  R31,Y+18+1
000100 9631      	ADIW R30,1
000101 8bea      	STD  Y+18,R30
000102 8bfb      	STD  Y+18+1,R31
000103 9731      	SBIW R30,1
000104 91e4      	LPM  R30,Z
000105 2f2e      	MOV  R18,R30
000106 30e0      	CPI  R30,0
000107 f409      	BRNE PC+2
000108 c108      	RJMP _0x2000018
000109 2fe1      	MOV  R30,R17
00010a 30e0      	CPI  R30,0
00010b f431      	BRNE _0x200001C
00010c 3225      	CPI  R18,37
00010d f411      	BRNE _0x200001D
00010e e011      	LDI  R17,LOW(1)
00010f c001      	RJMP _0x200001E
                 _0x200001D:
000110 d1f6      	RCALL SUBOPT_0x3
                 _0x200001E:
000111 c0fe      	RJMP _0x200001B
                 _0x200001C:
000112 30e1      	CPI  R30,LOW(0x1)
000113 f4a1      	BRNE _0x200001F
000114 3225      	CPI  R18,37
000115 f411      	BRNE _0x2000020
000116 d1f0      	RCALL SUBOPT_0x3
000117 c0f7      	RJMP _0x20000CC
                 _0x2000020:
000118 e012      	LDI  R17,LOW(2)
000119 e040      	LDI  R20,LOW(0)
00011a e000      	LDI  R16,LOW(0)
00011b 322d      	CPI  R18,45
00011c f411      	BRNE _0x2000021
00011d e001      	LDI  R16,LOW(1)
00011e c0f1      	RJMP _0x200001B
                 _0x2000021:
00011f 322b      	CPI  R18,43
000120 f411      	BRNE _0x2000022
000121 e24b      	LDI  R20,LOW(43)
000122 c0ed      	RJMP _0x200001B
                 _0x2000022:
000123 3220      	CPI  R18,32
000124 f411      	BRNE _0x2000023
000125 e240      	LDI  R20,LOW(32)
000126 c0e9      	RJMP _0x200001B
                 _0x2000023:
000127 c002      	RJMP _0x2000024
                 _0x200001F:
000128 30e2      	CPI  R30,LOW(0x2)
000129 f439      	BRNE _0x2000025
                 _0x2000024:
00012a e050      	LDI  R21,LOW(0)
00012b e013      	LDI  R17,LOW(3)
00012c 3320      	CPI  R18,48
00012d f411      	BRNE _0x2000026
00012e 6800      	ORI  R16,LOW(128)
00012f c0e0      	RJMP _0x200001B
                 _0x2000026:
000130 c003      	RJMP _0x2000027
                 _0x2000025:
000131 30e3      	CPI  R30,LOW(0x3)
000132 f009      	BREQ PC+2
000133 c0dc      	RJMP _0x200001B
                 _0x2000027:
000134 3320      	CPI  R18,48
000135 f010      	BRLO _0x200002A
000136 332a      	CPI  R18,58
000137 f008      	BRLO _0x200002B
                 _0x200002A:
000138 c007      	RJMP _0x2000029
                 _0x200002B:
000139 e0aa      	LDI  R26,LOW(10)
00013a 9f5a      	MUL  R21,R26
00013b 2d50      	MOV  R21,R0
00013c 2fe2      	MOV  R30,R18
00013d 53e0      	SUBI R30,LOW(48)
00013e 0f5e      	ADD  R21,R30
00013f c0d0      	RJMP _0x200001B
                 _0x2000029:
000140 2fe2      	MOV  R30,R18
000141 36e3      	CPI  R30,LOW(0x63)
000142 f439      	BRNE _0x200002F
000143 d1ca      	RCALL SUBOPT_0x4
000144 89e8      	LDD  R30,Y+16
000145 89f9      	LDD  R31,Y+16+1
000146 81a4      	LDD  R26,Z+4
000147 93aa      	ST   -Y,R26
000148 d1cb      	RCALL SUBOPT_0x5
000149 c0c5      	RJMP _0x2000030
                 _0x200002F:
00014a 37e3      	CPI  R30,LOW(0x73)
00014b f429      	BRNE _0x2000032
00014c d1c1      	RCALL SUBOPT_0x4
00014d d1cc      	RCALL SUBOPT_0x6
00014e d18b      	RCALL _strlen
00014f 2f1e      	MOV  R17,R30
000150 c007      	RJMP _0x2000033
                 _0x2000032:
000151 37e0      	CPI  R30,LOW(0x70)
000152 f449      	BRNE _0x2000035
000153 d1ba      	RCALL SUBOPT_0x4
000154 d1c5      	RCALL SUBOPT_0x6
000155 d190      	RCALL _strlenf
000156 2f1e      	MOV  R17,R30
000157 6008      	ORI  R16,LOW(8)
                 _0x2000033:
000158 6002      	ORI  R16,LOW(2)
000159 770f      	ANDI R16,LOW(127)
00015a e030      	LDI  R19,LOW(0)
00015b c037      	RJMP _0x2000036
                 _0x2000035:
00015c 36e4      	CPI  R30,LOW(0x64)
00015d f011      	BREQ _0x2000039
00015e 36e9      	CPI  R30,LOW(0x69)
00015f f411      	BRNE _0x200003A
                 _0x2000039:
000160 6004      	ORI  R16,LOW(4)
000161 c002      	RJMP _0x200003B
                 _0x200003A:
000162 37e5      	CPI  R30,LOW(0x75)
000163 f431      	BRNE _0x200003C
                 _0x200003B:
000164 e5e4      	LDI  R30,LOW(_tbl10_G100*2)
000165 e0f0      	LDI  R31,HIGH(_tbl10_G100*2)
000166 83ee      	STD  Y+6,R30
000167 83ff      	STD  Y+6+1,R31
000168 e015      	LDI  R17,LOW(5)
000169 c00c      	RJMP _0x200003D
                 _0x200003C:
00016a 35e8      	CPI  R30,LOW(0x58)
00016b f411      	BRNE _0x200003F
00016c 6008      	ORI  R16,LOW(8)
00016d c003      	RJMP _0x2000040
                 _0x200003F:
00016e 37e8      	CPI  R30,LOW(0x78)
00016f f009      	BREQ PC+2
000170 c09e      	RJMP _0x2000071
                 _0x2000040:
000171 e5ee      	LDI  R30,LOW(_tbl16_G100*2)
000172 e0f0      	LDI  R31,HIGH(_tbl16_G100*2)
000173 83ee      	STD  Y+6,R30
000174 83ff      	STD  Y+6+1,R31
000175 e014      	LDI  R17,LOW(4)
                 _0x200003D:
000176 ff02      	SBRS R16,2
000177 c015      	RJMP _0x2000042
000178 d195      	RCALL SUBOPT_0x4
000179 89a8      	LDD  R26,Y+16
00017a 89b9      	LDD  R27,Y+16+1
00017b 9614      	ADIW R26,4
00017c 91ed      	LD   R30,X+
00017d 91fd      	LD   R31,X+
00017e 87ea      	STD  Y+10,R30
00017f 87fb      	STD  Y+10+1,R31
000180 85ab      	LDD  R26,Y+11
000181 23aa      	TST  R26
000182 f422      	BRPL _0x2000043
000183 d1b9      	RCALL __ANEGW1
000184 87ea      	STD  Y+10,R30
000185 87fb      	STD  Y+10+1,R31
000186 e24d      	LDI  R20,LOW(45)
                 _0x2000043:
000187 3040      	CPI  R20,0
000188 f011      	BREQ _0x2000044
000189 5f1f      	SUBI R17,-LOW(1)
00018a c001      	RJMP _0x2000045
                 _0x2000044:
00018b 7f0b      	ANDI R16,LOW(251)
                 _0x2000045:
00018c c006      	RJMP _0x2000046
                 _0x2000042:
00018d d180      	RCALL SUBOPT_0x4
00018e 89a8      	LDD  R26,Y+16
00018f 89b9      	LDD  R27,Y+16+1
000190 d16b      	RCALL SUBOPT_0x1
000191 87ea      	STD  Y+10,R30
000192 87fb      	STD  Y+10+1,R31
                 _0x2000046:
                 _0x2000036:
000193 fd00      	SBRC R16,0
000194 c010      	RJMP _0x2000047
                 _0x2000048:
000195 1715      	CP   R17,R21
000196 f470      	BRSH _0x200004A
000197 ff07      	SBRS R16,7
000198 c008      	RJMP _0x200004B
000199 ff02      	SBRS R16,2
00019a c004      	RJMP _0x200004C
00019b 7f0b      	ANDI R16,LOW(251)
00019c 2f24      	MOV  R18,R20
00019d 5011      	SUBI R17,LOW(1)
00019e c001      	RJMP _0x200004D
                 _0x200004C:
00019f e320      	LDI  R18,LOW(48)
                 _0x200004D:
0001a0 c001      	RJMP _0x200004E
                 _0x200004B:
0001a1 e220      	LDI  R18,LOW(32)
                 _0x200004E:
0001a2 d164      	RCALL SUBOPT_0x3
0001a3 5051      	SUBI R21,LOW(1)
0001a4 cff0      	RJMP _0x2000048
                 _0x200004A:
                 _0x2000047:
0001a5 2f31      	MOV  R19,R17
0001a6 ff01      	SBRS R16,1
0001a7 c016      	RJMP _0x200004F
                 _0x2000050:
0001a8 3030      	CPI  R19,0
0001a9 f099      	BREQ _0x2000052
0001aa ff03      	SBRS R16,3
0001ab c006      	RJMP _0x2000053
0001ac 81ee      	LDD  R30,Y+6
0001ad 81ff      	LDD  R31,Y+6+1
0001ae 9125      	LPM  R18,Z+
0001af 83ee      	STD  Y+6,R30
0001b0 83ff      	STD  Y+6+1,R31
0001b1 c005      	RJMP _0x2000054
                 _0x2000053:
0001b2 81ae      	LDD  R26,Y+6
0001b3 81bf      	LDD  R27,Y+6+1
0001b4 912d      	LD   R18,X+
0001b5 83ae      	STD  Y+6,R26
0001b6 83bf      	STD  Y+6+1,R27
                 _0x2000054:
0001b7 d14f      	RCALL SUBOPT_0x3
0001b8 3050      	CPI  R21,0
0001b9 f009      	BREQ _0x2000055
0001ba 5051      	SUBI R21,LOW(1)
                 _0x2000055:
0001bb 5031      	SUBI R19,LOW(1)
0001bc cfeb      	RJMP _0x2000050
                 _0x2000052:
0001bd c048      	RJMP _0x2000056
                 _0x200004F:
                 _0x2000058:
0001be e320      	LDI  R18,LOW(48)
0001bf 81ee      	LDD  R30,Y+6
0001c0 81ff      	LDD  R31,Y+6+1
0001c1 d17f      	RCALL __GETW1PF
0001c2 87e8      	STD  Y+8,R30
0001c3 87f9      	STD  Y+8+1,R31
0001c4 81ee      	LDD  R30,Y+6
0001c5 81ff      	LDD  R31,Y+6+1
0001c6 9632      	ADIW R30,2
0001c7 83ee      	STD  Y+6,R30
0001c8 83ff      	STD  Y+6+1,R31
                 _0x200005A:
0001c9 85e8      	LDD  R30,Y+8
0001ca 85f9      	LDD  R31,Y+8+1
0001cb 85aa      	LDD  R26,Y+10
0001cc 85bb      	LDD  R27,Y+10+1
0001cd 17ae      	CP   R26,R30
0001ce 07bf      	CPC  R27,R31
0001cf f050      	BRLO _0x200005C
0001d0 5f2f      	SUBI R18,-LOW(1)
0001d1 85a8      	LDD  R26,Y+8
0001d2 85b9      	LDD  R27,Y+8+1
0001d3 85ea      	LDD  R30,Y+10
0001d4 85fb      	LDD  R31,Y+10+1
0001d5 1bea      	SUB  R30,R26
0001d6 0bfb      	SBC  R31,R27
0001d7 87ea      	STD  Y+10,R30
0001d8 87fb      	STD  Y+10+1,R31
0001d9 cfef      	RJMP _0x200005A
                 _0x200005C:
0001da 332a      	CPI  R18,58
0001db f028      	BRLO _0x200005D
0001dc ff03      	SBRS R16,3
0001dd c002      	RJMP _0x200005E
0001de 5f29      	SUBI R18,-LOW(7)
0001df c001      	RJMP _0x200005F
                 _0x200005E:
0001e0 5d29      	SUBI R18,-LOW(39)
                 _0x200005F:
                 _0x200005D:
0001e1 fd04      	SBRC R16,4
0001e2 c019      	RJMP _0x2000061
0001e3 3321      	CPI  R18,49
0001e4 f420      	BRSH _0x2000063
0001e5 85a8      	LDD  R26,Y+8
0001e6 85b9      	LDD  R27,Y+8+1
0001e7 9711      	SBIW R26,1
0001e8 f409      	BRNE _0x2000062
                 _0x2000063:
0001e9 c009      	RJMP _0x20000CD
                 _0x2000062:
0001ea 1753      	CP   R21,R19
0001eb f010      	BRLO _0x2000067
0001ec ff00      	SBRS R16,0
0001ed c001      	RJMP _0x2000068
                 _0x2000067:
0001ee c011      	RJMP _0x2000066
                 _0x2000068:
0001ef e220      	LDI  R18,LOW(32)
0001f0 ff07      	SBRS R16,7
0001f1 c00a      	RJMP _0x2000069
0001f2 e320      	LDI  R18,LOW(48)
                 _0x20000CD:
0001f3 6100      	ORI  R16,LOW(16)
0001f4 ff02      	SBRS R16,2
0001f5 c006      	RJMP _0x200006A
0001f6 7f0b      	ANDI R16,LOW(251)
0001f7 934a      	ST   -Y,R20
0001f8 d11b      	RCALL SUBOPT_0x5
0001f9 3050      	CPI  R21,0
0001fa f009      	BREQ _0x200006B
0001fb 5051      	SUBI R21,LOW(1)
                 _0x200006B:
                 _0x200006A:
                 _0x2000069:
                 _0x2000061:
0001fc d10a      	RCALL SUBOPT_0x3
0001fd 3050      	CPI  R21,0
0001fe f009      	BREQ _0x200006C
0001ff 5051      	SUBI R21,LOW(1)
                 _0x200006C:
                 _0x2000066:
000200 5031      	SUBI R19,LOW(1)
000201 85a8      	LDD  R26,Y+8
000202 85b9      	LDD  R27,Y+8+1
000203 9712      	SBIW R26,2
000204 f008      	BRLO _0x2000059
000205 cfb8      	RJMP _0x2000058
                 _0x2000059:
                 _0x2000056:
000206 ff00      	SBRS R16,0
000207 c007      	RJMP _0x200006D
                 _0x200006E:
000208 3050      	CPI  R21,0
000209 f029      	BREQ _0x2000070
00020a 5051      	SUBI R21,LOW(1)
00020b e2e0      	LDI  R30,LOW(32)
00020c 93ea      	ST   -Y,R30
00020d d106      	RCALL SUBOPT_0x5
00020e cff9      	RJMP _0x200006E
                 _0x2000070:
                 _0x200006D:
                 _0x2000071:
                 _0x2000030:
                 _0x20000CC:
00020f e010      	LDI  R17,LOW(0)
                 _0x200001B:
000210 ceed      	RJMP _0x2000016
                 _0x2000018:
000211 85ac      	LDD  R26,Y+12
000212 85bd      	LDD  R27,Y+12+1
000213 91ed      	LD   R30,X+
000214 91fd      	LD   R31,X+
000215 d120      	RCALL __LOADLOCR6
000216 9664      	ADIW R28,20
000217 9508      	RET
                 ; .FEND
                 _sprintf:
                 ; .FSTART _sprintf
000218 92ff      	PUSH R15
000219 2ef8      	MOV  R15,R24
00021a 9726      	SBIW R28,6
00021b d113      	RCALL __SAVELOCR6
00021c 01fe      	MOVW R30,R28
                +
00021d 2400     +CLR R0
00021e 0def     +ADD R30 , R15
00021f 1df0     +ADC R31 , R0
                 	__ADDW1R15
                +
000220 8546     +LDD R20 , Z + 14
000221 8557     +LDD R21 , Z + 14 + 1
                 	__GETWRZ 20,21,14
000222 2e04      	MOV  R0,R20
000223 2a05      	OR   R0,R21
000224 f419      	BRNE _0x2000072
000225 efef      	LDI  R30,LOW(65535)
000226 efff      	LDI  R31,HIGH(65535)
000227 c023      	RJMP _0x2080002
                 _0x2000072:
000228 01de      	MOVW R26,R28
000229 9618      	ADIW R26,8
                +
00022a 2400     +CLR R0
00022b 0daf     +ADD R26 , R15
00022c 1db0     +ADC R27 , R0
                 	__ADDW2R15
00022d 018d      	MOVW R16,R26
                +
00022e 8748     +STD Y + 8 , R20
00022f 8759     +STD Y + 8 + 1 , R21
                 	__PUTWSR 20,21,8
000230 e0e0      	LDI  R30,LOW(0)
000231 87ea      	STD  Y+10,R30
000232 87eb      	STD  Y+10+1,R30
000233 01de      	MOVW R26,R28
000234 961c      	ADIW R26,12
                +
000235 2400     +CLR R0
000236 0daf     +ADD R26 , R15
000237 1db0     +ADC R27 , R0
                 	__ADDW2R15
000238 91ed      	LD   R30,X+
000239 91fd      	LD   R31,X+
00023a 93fa      	ST   -Y,R31
00023b 93ea      	ST   -Y,R30
00023c 931a      	ST   -Y,R17
00023d 930a      	ST   -Y,R16
00023e ece5      	LDI  R30,LOW(_put_buff_G100)
00023f e0f0      	LDI  R31,HIGH(_put_buff_G100)
000240 93fa      	ST   -Y,R31
000241 93ea      	ST   -Y,R30
000242 01de      	MOVW R26,R28
000243 961c      	ADIW R26,12
000244 deae      	RCALL __print_G100
000245 019f      	MOVW R18,R30
000246 85a8      	LDD  R26,Y+8
000247 85b9      	LDD  R27,Y+8+1
000248 e0e0      	LDI  R30,LOW(0)
000249 93ec      	ST   X,R30
00024a 01f9      	MOVW R30,R18
                 _0x2080002:
00024b d0ea      	RCALL __LOADLOCR6
00024c 962c      	ADIW R28,12
00024d 90ff      	POP  R15
00024e 9508      	RET
                 ; .FEND
                 	#ifndef __SLEEP_DEFINED__
                 	#endif
                 
                 	.DSEG
                 
                 	.CSEG
                 __lcd_write_nibble_G101:
                 ; .FSTART __lcd_write_nibble_G101
00024f 931a      	ST   -Y,R17
000250 2f1a      	MOV  R17,R26
000251 b3e5      	IN   R30,0x15
000252 70ef      	ANDI R30,LOW(0xF)
000253 2fae      	MOV  R26,R30
000254 2fe1      	MOV  R30,R17
000255 7fe0      	ANDI R30,LOW(0xF0)
000256 2bea      	OR   R30,R26
000257 bbe5      	OUT  0x15,R30
                +
000258 e08d     +LDI R24 , LOW ( 13 )
                +__DELAY_USB_LOOP :
000259 958a     +DEC R24
00025a f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 13
00025b 9aaa      	SBI  0x15,2
                +
00025c e08d     +LDI R24 , LOW ( 13 )
                +__DELAY_USB_LOOP :
00025d 958a     +DEC R24
00025e f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 13
00025f 98aa      	CBI  0x15,2
                +
000260 e08d     +LDI R24 , LOW ( 13 )
                +__DELAY_USB_LOOP :
000261 958a     +DEC R24
000262 f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 13
000263 c074      	RJMP _0x2080001
                 ; .FEND
                 __lcd_write_data:
                 ; .FSTART __lcd_write_data
000264 93aa      	ST   -Y,R26
000265 81a8      	LD   R26,Y
000266 dfe8      	RCALL __lcd_write_nibble_G101
000267 81e8          ld    r30,y
000268 95e2          swap  r30
000269 83e8          st    y,r30
00026a 81a8      	LD   R26,Y
00026b dfe3      	RCALL __lcd_write_nibble_G101
                +
00026c e885     +LDI R24 , LOW ( 133 )
                +__DELAY_USB_LOOP :
00026d 958a     +DEC R24
00026e f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 133
00026f 9621      	ADIW R28,1
000270 9508      	RET
                 ; .FEND
                 _lcd_gotoxy:
                 ; .FSTART _lcd_gotoxy
000271 931a      	ST   -Y,R17
000272 930a      	ST   -Y,R16
000273 2f1a      	MOV  R17,R26
000274 810a      	LDD  R16,Y+2
000275 2fe1      	MOV  R30,R17
000276 e0f0      	LDI  R31,0
000277 57ef      	SUBI R30,LOW(-__base_y_G101)
000278 4ffd      	SBCI R31,HIGH(-__base_y_G101)
000279 81e0      	LD   R30,Z
00027a 0fe0      	ADD  R30,R16
00027b 2fae      	MOV  R26,R30
00027c dfe7      	RCALL __lcd_write_data
00027d 2e70      	MOV  R7,R16
00027e 2e61      	MOV  R6,R17
00027f 8119      	LDD  R17,Y+1
000280 8108      	LDD  R16,Y+0
000281 9623      	ADIW R28,3
000282 9508      	RET
                 ; .FEND
                 _lcd_clear:
                 ; .FSTART _lcd_clear
000283 e0a2      	LDI  R26,LOW(2)
000284 d09f      	RCALL SUBOPT_0x7
000285 e0ac      	LDI  R26,LOW(12)
000286 dfdd      	RCALL __lcd_write_data
000287 e0a1      	LDI  R26,LOW(1)
000288 d09b      	RCALL SUBOPT_0x7
000289 e0e0      	LDI  R30,LOW(0)
00028a 2e6e      	MOV  R6,R30
00028b 2e7e      	MOV  R7,R30
00028c 9508      	RET
                 ; .FEND
                 _lcd_putchar:
                 ; .FSTART _lcd_putchar
00028d 931a      	ST   -Y,R17
00028e 2f1a      	MOV  R17,R26
00028f 301a      	CPI  R17,10
000290 f011      	BREQ _0x2020005
000291 1479      	CP   R7,R9
000292 f038      	BRLO _0x2020004
                 _0x2020005:
000293 e0e0      	LDI  R30,LOW(0)
000294 93ea      	ST   -Y,R30
000295 9463      	INC  R6
000296 2da6      	MOV  R26,R6
000297 dfd9      	RCALL _lcd_gotoxy
000298 301a      	CPI  R17,10
000299 f1f1      	BREQ _0x2080001
                 _0x2020004:
00029a 9473      	INC  R7
00029b 9aa8      	SBI  0x15,0
00029c 2fa1      	MOV  R26,R17
00029d dfc6      	RCALL __lcd_write_data
00029e 98a8      	CBI  0x15,0
00029f c038      	RJMP _0x2080001
                 ; .FEND
                 _lcd_puts:
                 ; .FSTART _lcd_puts
0002a0 d090      	RCALL __SAVELOCR4
0002a1 019d      	MOVW R18,R26
                 _0x2020008:
0002a2 01d9      	MOVW R26,R18
                +
0002a3 5f2f     +SUBI R18 , LOW ( - 1 )
0002a4 4f3f     +SBCI R19 , HIGH ( - 1 )
                 	__ADDWRN 18,19,1
0002a5 91ec      	LD   R30,X
0002a6 2f1e      	MOV  R17,R30
0002a7 30e0      	CPI  R30,0
0002a8 f019      	BREQ _0x202000A
0002a9 2fa1      	MOV  R26,R17
0002aa dfe2      	RCALL _lcd_putchar
0002ab cff6      	RJMP _0x2020008
                 _0x202000A:
0002ac d08b      	RCALL __LOADLOCR4
0002ad 9624      	ADIW R28,4
0002ae 9508      	RET
                 ; .FEND
                 _lcd_init:
                 ; .FSTART _lcd_init
0002af 931a      	ST   -Y,R17
0002b0 2f1a      	MOV  R17,R26
0002b1 b3e4      	IN   R30,0x14
0002b2 6fe0      	ORI  R30,LOW(0xF0)
0002b3 bbe4      	OUT  0x14,R30
0002b4 9aa2      	SBI  0x14,2
0002b5 9aa0      	SBI  0x14,0
0002b6 9aa1      	SBI  0x14,1
0002b7 98aa      	CBI  0x15,2
0002b8 98a8      	CBI  0x15,0
0002b9 98a9      	CBI  0x15,1
0002ba 2e91      	MOV  R9,R17
0002bb 2fe1      	MOV  R30,R17
0002bc 58e0      	SUBI R30,-LOW(128)
                +
0002bd 93e0 0283+STS __base_y_G101 + ( 2 ) , R30
                 	__PUTB1MN __base_y_G101,2
0002bf 2fe1      	MOV  R30,R17
0002c0 54e0      	SUBI R30,-LOW(192)
                +
0002c1 93e0 0284+STS __base_y_G101 + ( 3 ) , R30
                 	__PUTB1MN __base_y_G101,3
0002c3 e1a4      	LDI  R26,LOW(20)
0002c4 e0b0      	LDI  R27,0
0002c5 d07f      	RCALL _delay_ms
0002c6 d061      	RCALL SUBOPT_0x8
0002c7 d060      	RCALL SUBOPT_0x8
0002c8 d05f      	RCALL SUBOPT_0x8
0002c9 e2a0      	LDI  R26,LOW(32)
0002ca df84      	RCALL __lcd_write_nibble_G101
                +
0002cb ec88     +LDI R24 , LOW ( 200 )
0002cc e090     +LDI R25 , HIGH ( 200 )
                +__DELAY_USW_LOOP :
0002cd 9701     +SBIW R24 , 1
0002ce f7f1     +BRNE __DELAY_USW_LOOP
                 	__DELAY_USW 200
0002cf e2a8      	LDI  R26,LOW(40)
0002d0 df93      	RCALL __lcd_write_data
0002d1 e0a4      	LDI  R26,LOW(4)
0002d2 df91      	RCALL __lcd_write_data
0002d3 e8a5      	LDI  R26,LOW(133)
0002d4 df8f      	RCALL __lcd_write_data
0002d5 e0a6      	LDI  R26,LOW(6)
0002d6 df8d      	RCALL __lcd_write_data
0002d7 dfab      	RCALL _lcd_clear
                 _0x2080001:
0002d8 9119      	LD   R17,Y+
0002d9 9508      	RET
                 ; .FEND
                 
                 	.CSEG
                 
                 	.CSEG
                 _strlen:
                 ; .FSTART _strlen
0002da 93ba      	ST   -Y,R27
0002db 93aa      	ST   -Y,R26
0002dc 91a9          ld   r26,y+
0002dd 91b9          ld   r27,y+
0002de 27ee          clr  r30
0002df 27ff          clr  r31
                 strlen0:
0002e0 916d          ld   r22,x+
0002e1 2366          tst  r22
0002e2 f011          breq strlen1
0002e3 9631          adiw r30,1
0002e4 cffb          rjmp strlen0
                 strlen1:
0002e5 9508          ret
                 ; .FEND
                 _strlenf:
                 ; .FSTART _strlenf
0002e6 93ba      	ST   -Y,R27
0002e7 93aa      	ST   -Y,R26
0002e8 27aa          clr  r26
0002e9 27bb          clr  r27
0002ea 91e9          ld   r30,y+
0002eb 91f9          ld   r31,y+
                 strlenf0:
0002ec 9005      	lpm  r0,z+
0002ed 2000          tst  r0
0002ee f011          breq strlenf1
0002ef 9611          adiw r26,1
0002f0 cffb          rjmp strlenf0
                 strlenf1:
0002f1 01fd          movw r30,r26
0002f2 9508          ret
                 ; .FEND
                 
                 	.DSEG
                 _painel1:
000260           	.BYTE 0x21
                 __base_y_G101:
000281           	.BYTE 0x4
                 
                 	.CSEG
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x0:
0002f3 e0e0      	LDI  R30,LOW(0)
0002f4 93ea      	ST   -Y,R30
0002f5 e0a0      	LDI  R26,LOW(0)
0002f6 df7a      	RCALL _lcd_gotoxy
0002f7 e6e0      	LDI  R30,LOW(_painel1)
0002f8 e0f2      	LDI  R31,HIGH(_painel1)
0002f9 93fa      	ST   -Y,R31
0002fa 93ea      	ST   -Y,R30
0002fb 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x1:
0002fc 9614      	ADIW R26,4
                +
0002fd 91ed     +LD R30 , X +
0002fe 91fc     +LD R31 , X
0002ff 9711     +SBIW R26 , 1
                 	__GETW1P
000300 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x2:
000301 91ed      	LD   R30,X+
000302 91fd      	LD   R31,X+
000303 9631      	ADIW R30,1
000304 93fe      	ST   -X,R31
000305 93ee      	ST   -X,R30
000306 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:18 WORDS
                 SUBOPT_0x3:
000307 932a      	ST   -Y,R18
000308 85ad      	LDD  R26,Y+13
000309 85be      	LDD  R27,Y+13+1
00030a 85ef      	LDD  R30,Y+15
00030b 89f8      	LDD  R31,Y+15+1
00030c 9509      	ICALL
00030d 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:14 WORDS
                 SUBOPT_0x4:
00030e 89e8      	LDD  R30,Y+16
00030f 89f9      	LDD  R31,Y+16+1
000310 9734      	SBIW R30,4
000311 8be8      	STD  Y+16,R30
000312 8bf9      	STD  Y+16+1,R31
000313 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:6 WORDS
                 SUBOPT_0x5:
000314 85ad      	LDD  R26,Y+13
000315 85be      	LDD  R27,Y+13+1
000316 85ef      	LDD  R30,Y+15
000317 89f8      	LDD  R31,Y+15+1
000318 9509      	ICALL
000319 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:6 WORDS
                 SUBOPT_0x6:
00031a 89a8      	LDD  R26,Y+16
00031b 89b9      	LDD  R27,Y+16+1
00031c 9614      	ADIW R26,4
00031d 91ed      	LD   R30,X+
00031e 91fd      	LD   R31,X+
00031f 83ee      	STD  Y+6,R30
000320 83ff      	STD  Y+6+1,R31
000321 81ae      	LDD  R26,Y+6
000322 81bf      	LDD  R27,Y+6+1
000323 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x7:
000324 df3f      	RCALL __lcd_write_data
000325 e0a3      	LDI  R26,LOW(3)
000326 e0b0      	LDI  R27,0
000327 c01d      	RJMP _delay_ms
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:8 WORDS
                 SUBOPT_0x8:
000328 e3a0      	LDI  R26,LOW(48)
000329 df25      	RCALL __lcd_write_nibble_G101
                +
00032a ec88     +LDI R24 , LOW ( 200 )
00032b e090     +LDI R25 , HIGH ( 200 )
                +__DELAY_USW_LOOP :
00032c 9701     +SBIW R24 , 1
00032d f7f1     +BRNE __DELAY_USW_LOOP
                 	__DELAY_USW 200
00032e 9508      	RET
                 
                 ;RUNTIME LIBRARY
                 
                 	.CSEG
                 __SAVELOCR6:
00032f 935a      	ST   -Y,R21
                 __SAVELOCR5:
000330 934a      	ST   -Y,R20
                 __SAVELOCR4:
000331 933a      	ST   -Y,R19
                 __SAVELOCR3:
000332 932a      	ST   -Y,R18
                 __SAVELOCR2:
000333 931a      	ST   -Y,R17
000334 930a      	ST   -Y,R16
000335 9508      	RET
                 
                 __LOADLOCR6:
000336 815d      	LDD  R21,Y+5
                 __LOADLOCR5:
000337 814c      	LDD  R20,Y+4
                 __LOADLOCR4:
000338 813b      	LDD  R19,Y+3
                 __LOADLOCR3:
000339 812a      	LDD  R18,Y+2
                 __LOADLOCR2:
00033a 8119      	LDD  R17,Y+1
00033b 8108      	LD   R16,Y
00033c 9508      	RET
                 
                 __ANEGW1:
00033d 95f1      	NEG  R31
00033e 95e1      	NEG  R30
00033f 40f0      	SBCI R31,0
000340 9508      	RET
                 
                 __GETW1PF:
000341 9005      	LPM  R0,Z+
000342 91f4      	LPM  R31,Z
000343 2de0      	MOV  R30,R0
000344 9508      	RET
                 
                 _delay_ms:
000345 9610      	adiw r26,0
000346 f039      	breq __delay_ms1
                 __delay_ms0:
000347 95a8      	wdr
                +
000348 ed80     +LDI R24 , LOW ( 0x7D0 )
000349 e097     +LDI R25 , HIGH ( 0x7D0 )
                +__DELAY_USW_LOOP :
00034a 9701     +SBIW R24 , 1
00034b f7f1     +BRNE __DELAY_USW_LOOP
                 	__DELAY_USW 0x7D0
00034c 9711      	sbiw r26,1
00034d f7c9      	brne __delay_ms0
                 __delay_ms1:
00034e 9508      	ret
                 
                 ;END OF CODE MARKER
                 __END_OF_CODE:


RESOURCE USE INFORMATION
------------------------

Notice:
The register and instruction counts are symbol table hit counts,
and hence implicitly used resources are not counted, eg, the
'lpm' instruction without operands implicitly uses r0 and z,
none of which are counted.

x,y,z are separate entities in the symbol table and are
counted separately from r26..r31 here.

.dseg memory usage only counts static data declared with .byte

ATmega32 register use summary:
r0 :  23 r1 :   1 r2 :   0 r3 :   0 r4 :   4 r5 :   3 r6 :   4 r7 :   4 
r8 :   0 r9 :   2 r10:   0 r11:   0 r12:   0 r13:   0 r14:   0 r15:   6 
r16:  37 r17:  39 r18:  38 r19:   9 r20:  12 r21:  22 r22:   4 r23:   0 
r24:  23 r25:   5 r26:  91 r27:  30 r28:  14 r29:   1 r30: 202 r31:  64 
x  :  31 y  : 140 z  :  17 
Registers used: 26 out of 35 (74.3%)

ATmega32 instruction use summary:
.lds  :   0 .lds.l:   0 .sts  :   0 .sts.l:   0 adc   :   3 add   :   5 
adiw  :  22 and   :   0 andi  :   6 asr   :   0 bclr  :   0 bld   :   0 
brbc  :   0 brbs  :   0 brcc  :   0 brcs  :   0 break :   0 breq  :  20 
brge  :   0 brhc  :   0 brhs  :   0 brid  :   0 brie  :   0 brlo  :   8 
brlt  :   0 brmi  :   1 brne  :  29 brpl  :   1 brsh  :   2 brtc  :   0 
brts  :   0 brvc  :   0 brvs  :   0 bset  :   0 bst   :   0 call  :   0 
cbi   :   5 cbr   :   0 clc   :   0 clh   :   0 cli   :   1 cln   :   0 
clr   :  11 cls   :   0 clt   :   0 clv   :   0 clz   :   0 com   :   0 
cp    :   4 cpc   :   2 cpi   :  33 cpse  :   0 dec   :   5 des   :   0 
eor   :   0 fmul  :   0 fmuls :   0 fmulsu:   0 icall :   2 ijmp  :   0 
in    :   4 inc   :   2 jmp   :  22 ld    :  33 ldd   :  61 ldi   :  97 
lds   :   0 lpm   :  14 lsl   :   0 lsr   :   0 mov   :  33 movw  :  23 
mul   :   1 muls  :   0 mulsu :   0 neg   :   2 nop   :   0 or    :   4 
ori   :   8 out   :  45 pop   :   1 push  :   1 rcall :  61 ret   :  23 
reti  :   1 rjmp  :  60 rol   :   0 ror   :   0 sbc   :   1 sbci  :   3 
sbi   :   5 sbic  :   0 sbis  :   0 sbiw  :  20 sbr   :   0 sbrc  :   2 
sbrs  :  10 sec   :   0 seh   :   0 sei   :   1 sen   :   0 ser   :   0 
ses   :   0 set   :   0 sev   :   0 sez   :   0 sleep :   0 spm   :   0 
st    :  52 std   :  30 sts   :   2 sub   :   1 subi  :  17 swap  :   1 
tst   :   4 wdr   :   1 
Instructions used: 53 out of 116 (45.7%)

ATmega32 memory use summary [bytes]:
Segment   Begin    End      Code   Data   Used    Size   Use%
---------------------------------------------------------------
[.cseg] 0x000000 0x00069e   1656     38   1694   32768   5.2%
[.dseg] 0x000060 0x000285      0     37     37    2048   1.8%
[.eseg] 0x000000 0x000000      0      0      0    1024   0.0%

Assembly complete, 0 errors, 5 warnings
