;PCODE: $00000000 VOL: 0
	#ifndef __SLEEP_DEFINED__
;PCODE: $00000001 VOL: 0
	#define __SLEEP_DEFINED__
;PCODE: $00000002 VOL: 0
	.EQU __se_bit=0x80
;PCODE: $00000003 VOL: 0
	.EQU __sm_mask=0x70
;PCODE: $00000004 VOL: 0
	.EQU __sm_powerdown=0x20
;PCODE: $00000005 VOL: 0
	.EQU __sm_powersave=0x30
;PCODE: $00000006 VOL: 0
	.EQU __sm_standby=0x60
;PCODE: $00000007 VOL: 0
	.EQU __sm_ext_standby=0x70
;PCODE: $00000008 VOL: 0
	.EQU __sm_adc_noise_red=0x10
;PCODE: $00000009 VOL: 0
	.SET power_ctrl_reg=mcucr
;PCODE: $0000000A VOL: 0
	#endif
;PCODE: $0000000B VOL: 0
;PCODE: $0000000C VOL: 0
;interrupt [10] void timer1_ovf_isr(void)
; 0000 0007 { combustivel = combustivel - 20;

	.CSEG
;PCODE: $0000000D VOL: 0
;PCODE: $0000000E VOL: 0
;PCODE: $0000000F VOL: 0
;PCODE: $00000010 VOL: 0
;PCODE: $00000011 VOL: 0
;PCODE: $00000012 VOL: 0
;PCODE: $00000013 VOL: 0
; 0000 0008 if (PINB.6 == 1){
;PCODE: $00000014 VOL: 0
;PCODE: $00000015 VOL: 0
;PCODE: $00000016 VOL: 0
; 0000 0009 
; 0000 000A PORTA.0 = ~PORTA.0 ;
;PCODE: $00000017 VOL: 0
;PCODE: $00000018 VOL: 0
;PCODE: $00000019 VOL: 0
;PCODE: $0000001A VOL: 0
;PCODE: $0000001B VOL: 0
;PCODE: $0000001C VOL: 0
;PCODE: $0000001D VOL: 0
;PCODE: $0000001E VOL: 0
;PCODE: $0000001F VOL: 0
;PCODE: $00000020 VOL: 0
; 0000 000B TCNT1H=0x1F00 >> 8;
;PCODE: $00000021 VOL: 0
;PCODE: $00000022 VOL: 0
; 0000 000C TCNT1L=0x1F00 & 0xFF;
;PCODE: $00000023 VOL: 0
;PCODE: $00000024 VOL: 0
; 0000 000D while(PORTA.0 == 1){
;PCODE: $00000025 VOL: 0
;PCODE: $00000026 VOL: 0
;PCODE: $00000027 VOL: 0
;PCODE: $00000028 VOL: 0
; 0000 000E PORTA.0 = 1;
;PCODE: $00000029 VOL: 0
;PCODE: $0000002A VOL: 0
; 0000 000F if (PINB.6==0){
;PCODE: $0000002B VOL: 0
;PCODE: $0000002C VOL: 0
;PCODE: $0000002D VOL: 0
; 0000 0010 PORTA.0 = 0;
;PCODE: $0000002E VOL: 0
;PCODE: $0000002F VOL: 0
; 0000 0011 break;
;PCODE: $00000030 VOL: 0
; 0000 0012 }
; 0000 0013 }
;PCODE: $00000031 VOL: 0
;PCODE: $00000032 VOL: 0
;PCODE: $00000033 VOL: 0
; 0000 0014 
; 0000 0015 
; 0000 0016 }
; 0000 0017 
; 0000 0018 
; 0000 0019 
; 0000 001A if (PINB.7 == 1){
;PCODE: $00000034 VOL: 0
;PCODE: $00000035 VOL: 0
;PCODE: $00000036 VOL: 0
;PCODE: $00000037 VOL: 0
; 0000 001B 
; 0000 001C PORTA.1 = ~PORTA.1;
;PCODE: $00000038 VOL: 0
;PCODE: $00000039 VOL: 0
;PCODE: $0000003A VOL: 0
;PCODE: $0000003B VOL: 0
;PCODE: $0000003C VOL: 0
;PCODE: $0000003D VOL: 0
;PCODE: $0000003E VOL: 0
;PCODE: $0000003F VOL: 0
;PCODE: $00000040 VOL: 0
;PCODE: $00000041 VOL: 0
; 0000 001D TCNT1H=0x1F00 >> 8;
;PCODE: $00000042 VOL: 0
;PCODE: $00000043 VOL: 0
; 0000 001E TCNT1L=0x1F00 & 0xFF;
;PCODE: $00000044 VOL: 0
;PCODE: $00000045 VOL: 0
; 0000 001F 
; 0000 0020 while(PORTA.1 == 1){
;PCODE: $00000046 VOL: 0
;PCODE: $00000047 VOL: 0
;PCODE: $00000048 VOL: 0
;PCODE: $00000049 VOL: 0
; 0000 0021 PORTA.1 = 1;
;PCODE: $0000004A VOL: 0
;PCODE: $0000004B VOL: 0
; 0000 0022 if (PINB.7==0){
;PCODE: $0000004C VOL: 0
;PCODE: $0000004D VOL: 0
;PCODE: $0000004E VOL: 0
; 0000 0023 PORTA.1 = 0;
;PCODE: $0000004F VOL: 0
;PCODE: $00000050 VOL: 0
; 0000 0024 break;
;PCODE: $00000051 VOL: 0
; 0000 0025 }
; 0000 0026 }
;PCODE: $00000052 VOL: 0
;PCODE: $00000053 VOL: 0
;PCODE: $00000054 VOL: 0
; 0000 0027 }
; 0000 0028 }
;PCODE: $00000055 VOL: 0
;PCODE: $00000056 VOL: 0
;PCODE: $00000057 VOL: 0
;PCODE: $00000058 VOL: 0
;void main(void)
; 0000 0032 {
;PCODE: $00000059 VOL: 0
; 0000 0033 // Declare your local variables here
; 0000 0034 PORTA=0x00;
;PCODE: $0000005A VOL: 0
;PCODE: $0000005B VOL: 0
; 0000 0035 DDRA=0x03;
;PCODE: $0000005C VOL: 0
;PCODE: $0000005D VOL: 0
; 0000 0036 // Input/Output Ports initialization
; 0000 0037 // Port B initialization
; 0000 0038 // Func7=In Func6=In Func5=In Func4=In Func3=In Func2=In Func1=Out Func0=Out
; 0000 0039 // State7=T State6=T State5=T State4=T State3=T State2=T State1=0 State0=0
; 0000 003A PORTB=0x00;
;PCODE: $0000005E VOL: 0
;PCODE: $0000005F VOL: 0
; 0000 003B DDRB=0x00;
;PCODE: $00000060 VOL: 0
;PCODE: $00000061 VOL: 0
; 0000 003C 
; 0000 003D // Port C initialization
; 0000 003E // Func6=In Func5=In Func4=In Func3=In Func2=In Func1=In Func0=In
; 0000 003F // State6=T State5=T State4=T State3=T State2=T State1=T State0=T
; 0000 0040 PORTC=0x00;
;PCODE: $00000062 VOL: 0
;PCODE: $00000063 VOL: 0
; 0000 0041 DDRC=0x00;
;PCODE: $00000064 VOL: 0
;PCODE: $00000065 VOL: 0
; 0000 0042 
; 0000 0043 // Port D initialization
; 0000 0044 // Func7=In Func6=In Func5=In Func4=In Func3=In Func2=In Func1=In Func0=In
; 0000 0045 // State7=T State6=T State5=T State4=T State3=T State2=T State1=T State0=T
; 0000 0046 PORTD=0x00;
;PCODE: $00000066 VOL: 0
;PCODE: $00000067 VOL: 0
; 0000 0047 DDRD=0x00;
;PCODE: $00000068 VOL: 0
;PCODE: $00000069 VOL: 0
; 0000 0048 
; 0000 0049 // Timer/Counter 0 initialization
; 0000 004A // Clock source: System Clock
; 0000 004B // Clock value: Timer 0 Stopped
; 0000 004C TCCR0=0x00;
;PCODE: $0000006A VOL: 0
;PCODE: $0000006B VOL: 0
; 0000 004D TCNT0=0x00;
;PCODE: $0000006C VOL: 0
;PCODE: $0000006D VOL: 0
; 0000 004E 
; 0000 004F // Timer/Counter 1 initialization
; 0000 0050 // Clock source: System Clock
; 0000 0051 // Clock value: 14,400 kHz
; 0000 0052 // Mode: Normal top=0xFFFF
; 0000 0053 // OC1A output: Toggle
; 0000 0054 // OC1B output: Discon.
; 0000 0055 // Noise Canceler: Off
; 0000 0056 // Input Capture on Falling Edge
; 0000 0057 // Timer1 Overflow Interrupt: On
; 0000 0058 // Input Capture Interrupt: Off
; 0000 0059 // Compare A Match Interrupt: On
; 0000 005A // Compare B Match Interrupt: Off
; 0000 005B TCCR1A=0x40;
;PCODE: $0000006E VOL: 0
;PCODE: $0000006F VOL: 0
; 0000 005C TCCR1B=0x05;
;PCODE: $00000070 VOL: 0
;PCODE: $00000071 VOL: 0
; 0000 005D TCNT1H=0x38;
;PCODE: $00000072 VOL: 0
;PCODE: $00000073 VOL: 0
; 0000 005E TCNT1L=0x3F;
;PCODE: $00000074 VOL: 0
;PCODE: $00000075 VOL: 0
; 0000 005F ICR1H=0x00;
;PCODE: $00000076 VOL: 0
;PCODE: $00000077 VOL: 0
; 0000 0060 ICR1L=0x00;
;PCODE: $00000078 VOL: 0
;PCODE: $00000079 VOL: 0
; 0000 0061 OCR1AH=0xFF;
;PCODE: $0000007A VOL: 0
;PCODE: $0000007B VOL: 0
; 0000 0062 OCR1AL=0xFF;
;PCODE: $0000007C VOL: 0
;PCODE: $0000007D VOL: 0
; 0000 0063 OCR1BH=0x00;
;PCODE: $0000007E VOL: 0
;PCODE: $0000007F VOL: 0
; 0000 0064 OCR1BL=0x00;
;PCODE: $00000080 VOL: 0
;PCODE: $00000081 VOL: 0
; 0000 0065 
; 0000 0066 // Timer/Counter 2 initialization
; 0000 0067 // Clock source: System Clock
; 0000 0068 // Clock value: Timer2 Stopped
; 0000 0069 // Mode: Normal top=0xFF
; 0000 006A // OC2 output: Disconnected
; 0000 006B ASSR=0x00;
;PCODE: $00000082 VOL: 0
;PCODE: $00000083 VOL: 0
; 0000 006C TCCR2=0x00;
;PCODE: $00000084 VOL: 0
;PCODE: $00000085 VOL: 0
; 0000 006D TCNT2=0x00;
;PCODE: $00000086 VOL: 0
;PCODE: $00000087 VOL: 0
; 0000 006E OCR2=0x00;
;PCODE: $00000088 VOL: 0
;PCODE: $00000089 VOL: 0
; 0000 006F 
; 0000 0070 
; 0000 0071 // External Interrupt(s) initialization
; 0000 0072 // INT0: Off
; 0000 0073 // INT1: Off
; 0000 0074 // INT2: On
; 0000 0075 // INT2 Mode: Falling Edge
; 0000 0076 GICR|=(0<<INT1) | (0<<INT0) | (1<<INT2);
;PCODE: $0000008A VOL: 0
;PCODE: $0000008B VOL: 0
;PCODE: $0000008C VOL: 0
; 0000 0077 MCUCR=(0<<ISC11) | (0<<ISC10) | (0<<ISC01) | (0<<ISC00);
;PCODE: $0000008D VOL: 0
;PCODE: $0000008E VOL: 0
; 0000 0078 MCUCSR=(0<<ISC2);
;PCODE: $0000008F VOL: 0
;PCODE: $00000090 VOL: 0
; 0000 0079 GIFR=(0<<INTF1) | (0<<INTF0) | (1<<INTF2);
;PCODE: $00000091 VOL: 0
;PCODE: $00000092 VOL: 0
; 0000 007A 
; 0000 007B // Timer(s)/Counter(s) Interrupt(s) initialization
; 0000 007C TIMSK=0x04;
;PCODE: $00000093 VOL: 0
;PCODE: $00000094 VOL: 0
; 0000 007D 
; 0000 007E // USART initialization
; 0000 007F // USART disabled
; 0000 0080 UCSRB=0x00;
;PCODE: $00000095 VOL: 0
;PCODE: $00000096 VOL: 0
; 0000 0081 
; 0000 0082 // Analog Comparator initialization
; 0000 0083 // Analog Comparator: Off
; 0000 0084 // Analog Comparator Input Capture by Timer/Counter 1: Off
; 0000 0085 ACSR=0x80;
;PCODE: $00000097 VOL: 0
;PCODE: $00000098 VOL: 0
; 0000 0086 SFIOR=0x00;
;PCODE: $00000099 VOL: 0
;PCODE: $0000009A VOL: 0
; 0000 0087 
; 0000 0088 // ADC initialization
; 0000 0089 // ADC disabled
; 0000 008A ADCSRA=0x00;
;PCODE: $0000009B VOL: 0
;PCODE: $0000009C VOL: 0
; 0000 008B 
; 0000 008C // SPI initialization
; 0000 008D // SPI disabled
; 0000 008E SPCR=0x00;
;PCODE: $0000009D VOL: 0
;PCODE: $0000009E VOL: 0
; 0000 008F 
; 0000 0090 // TWI initialization
; 0000 0091 // TWI disabled
; 0000 0092 TWCR=0x00;
;PCODE: $0000009F VOL: 0
;PCODE: $000000A0 VOL: 0
; 0000 0093 
; 0000 0094 // Global enable interrupts
; 0000 0095 #asm("sei")
;PCODE: $000000A1 VOL: 0
; 0000 0096 
; 0000 0097 
; 0000 0098 while (1)
;PCODE: $000000A2 VOL: 0
; 0000 0099 {
; 0000 009A if (combustivel/1000 <=10)
;PCODE: $000000A3 VOL: 0
;PCODE: $000000A4 VOL: 0
;PCODE: $000000A5 VOL: 0
;PCODE: $000000A6 VOL: 0
;PCODE: $000000A7 VOL: 0
;PCODE: $000000A8 VOL: 0
;PCODE: $000000A9 VOL: 0
; 0000 009B {
; 0000 009C printf("Alerta. Abasteça! Seu combustível é de %d", combustivel);
;PCODE: $000000AA VOL: 0
;PCODE: $000000AB VOL: 0
;PCODE: $000000AC VOL: 0
;PCODE: $000000AD VOL: 0
;PCODE: $000000AE VOL: 0
;PCODE: $000000AF VOL: 0
;PCODE: $000000B0 VOL: 0
;PCODE: $000000B1 VOL: 0
;PCODE: $000000B2 VOL: 0
;PCODE: $000000B3 VOL: 0
;PCODE: $000000B4 VOL: 0
; 0000 009D }
; 0000 009E }
;PCODE: $000000B5 VOL: 0
;PCODE: $000000B6 VOL: 0
;PCODE: $000000B7 VOL: 0
; 0000 009F }
;PCODE: $000000B8 VOL: 0
;PCODE: $000000B9 VOL: 0
;PCODE: $000000BA VOL: 0
